package net.minecraft.client.renderer;

import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.google.common.collect.Sets;
import com.google.gson.JsonSyntaxException;
import java.io.IOException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Deque;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.concurrent.Callable;
import net.minecraft.block.Block;
import net.minecraft.block.BlockChest;
import net.minecraft.block.BlockEnderChest;
import net.minecraft.block.BlockSign;
import net.minecraft.block.BlockSkull;
import net.minecraft.block.material.Material;
import net.minecraft.block.state.IBlockState;
import net.minecraft.client.Minecraft;
import net.minecraft.client.audio.ISound;
import net.minecraft.client.audio.PositionedSoundRecord;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.multiplayer.WorldClient;
import net.minecraft.client.particle.EntityFX;
import net.minecraft.client.renderer.BlockModelRenderer;
import net.minecraft.client.renderer.BlockRendererDispatcher;
import net.minecraft.client.renderer.ChunkRenderContainer;
import net.minecraft.client.renderer.DestroyBlockProgress;
import net.minecraft.client.renderer.GLAllocation;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.OpenGlHelper;
import net.minecraft.client.renderer.RenderHelper;
import net.minecraft.client.renderer.RenderList;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.VboRenderList;
import net.minecraft.client.renderer.ViewFrustum;
import net.minecraft.client.renderer.WorldRenderer;
import net.minecraft.client.renderer.chunk.ChunkRenderDispatcher;
import net.minecraft.client.renderer.chunk.CompiledChunk;
import net.minecraft.client.renderer.chunk.IRenderChunkFactory;
import net.minecraft.client.renderer.chunk.ListChunkFactory;
import net.minecraft.client.renderer.chunk.RenderChunk;
import net.minecraft.client.renderer.chunk.VboChunkFactory;
import net.minecraft.client.renderer.chunk.VisGraph;
import net.minecraft.client.renderer.culling.ClippingHelper;
import net.minecraft.client.renderer.culling.ClippingHelperImpl;
import net.minecraft.client.renderer.culling.Frustum;
import net.minecraft.client.renderer.culling.ICamera;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.client.renderer.texture.TextureAtlasSprite;
import net.minecraft.client.renderer.texture.TextureManager;
import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;
import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
import net.minecraft.client.renderer.vertex.VertexBuffer;
import net.minecraft.client.renderer.vertex.VertexFormat;
import net.minecraft.client.renderer.vertex.VertexFormatElement;
import net.minecraft.client.renderer.vertex.VertexFormatElement.EnumType;
import net.minecraft.client.renderer.vertex.VertexFormatElement.EnumUsage;
import net.minecraft.client.resources.IResourceManager;
import net.minecraft.client.resources.IResourceManagerReloadListener;
import net.minecraft.client.shader.Framebuffer;
import net.minecraft.client.shader.ShaderGroup;
import net.minecraft.client.shader.ShaderLinkHelper;
import net.minecraft.crash.CrashReport;
import net.minecraft.crash.CrashReportCategory;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.item.EntityItemFrame;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.projectile.EntityWitherSkull;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemDye;
import net.minecraft.item.ItemRecord;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityChest;
import net.minecraft.tileentity.TileEntitySign;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.ClassInheritanceMultiMap;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumParticleTypes;
import net.minecraft.util.EnumWorldBlockLayer;
import net.minecraft.util.MathHelper;
import net.minecraft.util.Matrix4f;
import net.minecraft.util.MovingObjectPosition;
import net.minecraft.util.ReportedException;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.Vec3;
import net.minecraft.util.Vector3d;
import net.minecraft.util.BlockPos.MutableBlockPos;
import net.minecraft.util.MovingObjectPosition.MovingObjectType;
import net.minecraft.world.IWorldAccess;
import net.minecraft.world.WorldProvider;
import net.minecraft.world.border.WorldBorder;
import net.minecraft.world.chunk.Chunk;
import net.xtrafrancyz.covered.ObfValue;
import net.xtrafrancyz.mods.texteria.TexteriaOptions;
import optifine.ChunkUtils;
import optifine.CloudRenderer;
import optifine.Config;
import optifine.CustomColors;
import optifine.CustomSky;
import optifine.DynamicLights;
import optifine.Lagometer;
import optifine.RandomMobs;
import optifine.Reflector;
import optifine.ReflectorMethod;
import optifine.RenderInfoLazy;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.lwjgl.input.Keyboard;
import org.lwjgl.opengl.GL11;
import org.lwjgl.util.vector.Vector3f;
import org.lwjgl.util.vector.Vector4f;
import shadersmod.client.Shaders;
import shadersmod.client.ShadersRender;
import shadersmod.client.ShadowUtils;

public class RenderGlobal implements IWorldAccess, IResourceManagerReloadListener {
   private static final ObfValue.ODouble OBFVAL_133 = ObfValue.create(0.15707963267948966D);
   private static final ObfValue.ODouble OBFVAL_132 = ObfValue.create(-7.0D);
   private static final ObfValue.ODouble OBFVAL_131 = ObfValue.create(-5.0D);
   private static final ObfValue.ODouble OBFVAL_130 = ObfValue.create(0.4D);
   private static final ObfValue.ODouble OBFVAL_129 = ObfValue.create(5.0D);
   private static final ObfValue.ODouble OBFVAL_128 = ObfValue.create(6.283185307179586D);
   private static final ObfValue.OFloat OBFVAL_127 = ObfValue.create(0.25F);
   private static final ObfValue.OFloat OBFVAL_126 = ObfValue.create(0.75F);
   private static final ObfValue.ODouble OBFVAL_125 = ObfValue.create(0.3D);
   private static final ObfValue.ODouble OBFVAL_124 = ObfValue.create(0.1D);
   private static final ObfValue.OInteger OBFVAL_123 = ObfValue.create(100);
   private static final ObfValue.ODouble OBFVAL_122 = ObfValue.create(0.15D);
   private static final ObfValue.OInteger OBFVAL_121 = ObfValue.create(4095);
   private static final ObfValue.ODouble OBFVAL_120 = ObfValue.create(-0.03D);
   private static final ObfValue.ODouble OBFVAL_119 = ObfValue.create(0.2D);
   private static final ObfValue.ODouble OBFVAL_118 = ObfValue.create(0.5D);
   private static final ObfValue.ODouble OBFVAL_117 = ObfValue.create(0.6D);
   private static final ObfValue.OFloat OBFVAL_116 = ObfValue.create(0.3F);
   private static final ObfValue.OFloat OBFVAL_115 = ObfValue.create(0.05F);
   private static final ObfValue.OFloat OBFVAL_114 = ObfValue.create(10.0F);
   private static final ObfValue.OFloat OBFVAL_113 = ObfValue.create(2.6F);
   private static final ObfValue.OFloat OBFVAL_112 = ObfValue.create(1.2F);
   private static final ObfValue.OInteger OBFVAL_111 = ObfValue.create(1013);
   private static final ObfValue.ODouble OBFVAL_110 = ObfValue.create(38416.0D);
   private static final ObfValue.ODouble OBFVAL_109 = ObfValue.create(0.0020000000949949026D);
   private static final ObfValue.OFloat OBFVAL_108 = ObfValue.create(0.002F);
   private static final ObfValue.OFloat OBFVAL_107 = ObfValue.create(0.4F);
   private static final ObfValue.ODouble OBFVAL_106 = ObfValue.create(1024.0D);
   private static final ObfValue.OInteger OBFVAL_105 = ObfValue.create(768);
   private static final ObfValue.OInteger OBFVAL_104 = ObfValue.create(774);
   private static final ObfValue.OFloat OBFVAL_103 = ObfValue.create(3000.0F);
   private static final ObfValue.OLong OBFVAL_102 = ObfValue.create(3000L);
   private static final ObfValue.OInteger OBFVAL_101 = ObfValue.create(516);
   private static final ObfValue.OFloat OBFVAL_100 = ObfValue.create(-3.0F);
   private static final ObfValue.OFloat OBFVAL_99 = ObfValue.create(255.0F);
   private static final ObfValue.ODouble OBFVAL_98 = ObfValue.create(4.0D);
   private static final ObfValue.ODouble OBFVAL_97 = ObfValue.create(1.0E8D);
   private static final ObfValue.OFloat OBFVAL_96 = ObfValue.create(0.5F);
   private static final ObfValue.OFloat OBFVAL_95 = ObfValue.create(5.0F);
   private static final ObfValue.OFloat OBFVAL_94 = ObfValue.create(8.0F);
   private static final ObfValue.OFloat OBFVAL_93 = ObfValue.create(-5.0F);
   private static final ObfValue.OInteger OBFVAL_92 = ObfValue.create(-3);
   private static final ObfValue.OFloat OBFVAL_91 = ObfValue.create(9.765625E-4F);
   private static final ObfValue.OFloat OBFVAL_90 = ObfValue.create(0.00390625F);
   private static final ObfValue.OFloat OBFVAL_89 = ObfValue.create(0.7F);
   private static final ObfValue.OFloat OBFVAL_88 = ObfValue.create(0.9F);
   private static final ObfValue.ODouble OBFVAL_87 = ObfValue.create(0.33000001311302185D);
   private static final ObfValue.ODouble OBFVAL_86 = ObfValue.create(12.0D);
   private static final ObfValue.OFloat OBFVAL_85 = ObfValue.create(0.8F);
   private static final ObfValue.OInteger OBFVAL_84 = ObfValue.create(32);
   private static final ObfValue.OInteger OBFVAL_83 = ObfValue.create(-256);
   private static final ObfValue.ODouble OBFVAL_82 = ObfValue.create(4.8828125E-4D);
   private static final ObfValue.OFloat OBFVAL_81 = ObfValue.create(128.0F);
   private static final ObfValue.OFloat OBFVAL_80 = ObfValue.create(0.33F);
   private static final ObfValue.OInteger OBFVAL_79 = ObfValue.create(2048);
   private static final ObfValue.ODouble OBFVAL_78 = ObfValue.create(2048.0D);
   private static final ObfValue.ODouble OBFVAL_77 = ObfValue.create(0.029999999329447746D);
   private static final ObfValue.OFloat OBFVAL_76 = ObfValue.create(4.8828125E-4F);
   private static final ObfValue.OFloat OBFVAL_75 = ObfValue.create(0.6F);
   private static final ObfValue.OFloat OBFVAL_74 = ObfValue.create(0.04F);
   private static final ObfValue.OFloat OBFVAL_73 = ObfValue.create(0.2F);
   private static final ObfValue.ODouble OBFVAL_72 = ObfValue.create(-1.0D);
   private static final ObfValue.ODouble OBFVAL_71 = ObfValue.create(65.0D);
   private static final ObfValue.OFloat OBFVAL_70 = ObfValue.create(12.0F);
   private static final ObfValue.OFloat OBFVAL_69 = ObfValue.create(4.0F);
   private static final ObfValue.OFloat OBFVAL_68 = ObfValue.create(20.0F);
   private static final ObfValue.OFloat OBFVAL_67 = ObfValue.create(360.0F);
   private static final ObfValue.OInteger OBFVAL_66 = ObfValue.create(7424);
   private static final ObfValue.OFloat OBFVAL_65 = ObfValue.create(40.0F);
   private static final ObfValue.OFloat OBFVAL_64 = ObfValue.create(120.0F);
   private static final ObfValue.OInteger OBFVAL_63 = ObfValue.create(7425);
   private static final ObfValue.OInteger OBFVAL_62 = ObfValue.create(12);
   private static final ObfValue.OInteger OBFVAL_61 = ObfValue.create(5126);
   private static final ObfValue.OFloat OBFVAL_60 = ObfValue.create(70.0F);
   private static final ObfValue.OFloat OBFVAL_59 = ObfValue.create(100.0F);
   private static final ObfValue.OFloat OBFVAL_58 = ObfValue.create(11.0F);
   private static final ObfValue.OFloat OBFVAL_57 = ObfValue.create(59.0F);
   private static final ObfValue.OFloat OBFVAL_56 = ObfValue.create(30.0F);
   private static final ObfValue.OInteger OBFVAL_55 = ObfValue.create(255);
   private static final ObfValue.OInteger OBFVAL_54 = ObfValue.create(40);
   private static final ObfValue.ODouble OBFVAL_53 = ObfValue.create(-100.0D);
   private static final ObfValue.OFloat OBFVAL_52 = ObfValue.create(-90.0F);
   private static final ObfValue.OFloat OBFVAL_51 = ObfValue.create(90.0F);
   private static final ObfValue.OInteger OBFVAL_50 = ObfValue.create(20);
   private static final ObfValue.OInteger OBFVAL_49 = ObfValue.create(19);
   private static final ObfValue.OInteger OBFVAL_48 = ObfValue.create(61);
   private static final ObfValue.OInteger OBFVAL_47 = ObfValue.create(400);
   private static final ObfValue.OInteger OBFVAL_46 = ObfValue.create('\u8076');
   private static final ObfValue.OInteger OBFVAL_45 = ObfValue.create('\u8078');
   private static final ObfValue.OInteger OBFVAL_44 = ObfValue.create('\u8074');
   private static final ObfValue.OFloat OBFVAL_43 = ObfValue.create(3.1415927F);
   private static final ObfValue.OFloat OBFVAL_42 = ObfValue.create(0.017453292F);
   private static final ObfValue.OFloat OBFVAL_41 = ObfValue.create(180.0F);
   private static final ObfValue.OInteger OBFVAL_40 = ObfValue.create(6);
   private static final ObfValue.OFloat OBFVAL_39 = ObfValue.create(-1.0F);
   private static final ObfValue.OInteger OBFVAL_38 = ObfValue.create(256);
   private static final ObfValue.OInteger OBFVAL_37 = ObfValue.create(15);
   private static final ObfValue.OInteger OBFVAL_36 = ObfValue.create(248);
   private static final ObfValue.ODouble OBFVAL_35 = ObfValue.create(16.0D);
   private static final ObfValue.OInteger OBFVAL_34 = ObfValue.create(5);
   private static final ObfValue.ODouble OBFVAL_33 = ObfValue.create(0.06D);
   private static final ObfValue.ODouble OBFVAL_32 = ObfValue.create(256.0D);
   private static final ObfValue.OInteger OBFVAL_31 = ObfValue.create(16);
   private static final ObfValue.OInteger OBFVAL_30 = ObfValue.create(4);
   private static final ObfValue.ODouble OBFVAL_29 = ObfValue.create(2.0D);
   private static final ObfValue.ODouble OBFVAL_28 = ObfValue.create(3.141592653589793D);
   private static final ObfValue.ODouble OBFVAL_27 = ObfValue.create(100.0D);
   private static final ObfValue.ODouble OBFVAL_26 = ObfValue.create(0.01D);
   private static final ObfValue.OFloat OBFVAL_25 = ObfValue.create(0.1F);
   private static final ObfValue.OFloat OBFVAL_24 = ObfValue.create(0.15F);
   private static final ObfValue.OFloat OBFVAL_23 = ObfValue.create(2.0F);
   private static final ObfValue.OInteger OBFVAL_22 = ObfValue.create(1500);
   private static final ObfValue.OLong OBFVAL_21 = ObfValue.create(10842L);
   private static final ObfValue.OInteger OBFVAL_20 = ObfValue.create(64);
   private static final ObfValue.OInteger OBFVAL_19 = ObfValue.create(384);
   private static final ObfValue.OInteger OBFVAL_18 = ObfValue.create(-384);
   private static final ObfValue.OInteger OBFVAL_17 = ObfValue.create(7);
   private static final ObfValue.OFloat OBFVAL_16 = ObfValue.create(16.0F);
   private static final ObfValue.OInteger OBFVAL_15 = ObfValue.create(4864);
   private static final ObfValue.OFloat OBFVAL_14 = ObfValue.create(-16.0F);
   private static final ObfValue.OInteger OBFVAL_13 = ObfValue.create(771);
   private static final ObfValue.OInteger OBFVAL_12 = ObfValue.create(770);
   private static final ObfValue.OInteger OBFVAL_11 = ObfValue.create(3);
   private static final ObfValue.OInteger OBFVAL_10 = ObfValue.create(10243);
   private static final ObfValue.OInteger OBFVAL_9 = ObfValue.create(10497);
   private static final ObfValue.OInteger OBFVAL_8 = ObfValue.create(10242);
   private static final ObfValue.OInteger OBFVAL_7 = ObfValue.create(3553);
   private static final ObfValue.OInteger OBFVAL_6 = ObfValue.create(1024);
   private static final ObfValue.OInteger OBFVAL_5 = ObfValue.create(8);
   private static final ObfValue.OInteger OBFVAL_4 = ObfValue.create(2);
   private static final ObfValue.OInteger OBFVAL_3 = ObfValue.create(Integer.MIN_VALUE);
   private static final ObfValue.ODouble OBFVAL_2 = ObfValue.create(Double.MIN_VALUE);
   private static final ObfValue.OInteger OBFVAL_1 = ObfValue.create(10);
   private static final ObfValue.OInteger OBFVAL_0 = ObfValue.create(69696);
   private static final Logger field_147599_m = LogManager.getLogger();
   private static final ResourceLocation field_110927_h = new ResourceLocation("textures/environment/moon_phases.png");
   private static final ResourceLocation field_110928_i = new ResourceLocation("textures/environment/sun.png");
   private static final ResourceLocation field_110925_j = new ResourceLocation("textures/environment/clouds.png");
   private static final ResourceLocation field_110926_k = new ResourceLocation("textures/environment/end_sky.png");
   private static final ResourceLocation field_175006_g = new ResourceLocation("textures/misc/forcefield.png");
   public final Minecraft field_72777_q;
   private final TextureManager field_72770_i;
   private final RenderManager field_175010_j;
   private WorldClient field_72769_h;
   private Set field_175009_l = Sets.newLinkedHashSet();
   private List field_72755_R;
   private final Set field_181024_n;
   private ViewFrustum field_175008_n;
   private int field_72772_v;
   private int field_72771_w;
   private int field_72781_x;
   private VertexFormat field_175014_r;
   private VertexBuffer field_175013_s;
   private VertexBuffer field_175012_t;
   private VertexBuffer field_175011_u;
   private int field_72773_u;
   public final Map field_72738_E;
   private final Map field_147593_P;
   private final TextureAtlasSprite[] field_94141_F;
   private Framebuffer field_175015_z;
   private ShaderGroup field_174991_A;
   private double field_174992_B;
   private double field_174993_C;
   private double field_174987_D;
   private int field_174988_E;
   private int field_174989_F;
   private int field_174990_G;
   private double field_174997_H;
   private double field_174998_I;
   private double field_174999_J;
   private double field_175000_K;
   private double field_174994_L;
   private final ChunkRenderDispatcher field_174995_M;
   private ChunkRenderContainer field_174996_N;
   private int field_72739_F;
   private int field_72740_G;
   private int field_72748_H;
   private int field_72749_I;
   private int field_72750_J;
   private boolean field_175002_T;
   private ClippingHelper field_175001_U;
   private final Vector4f[] field_175004_V;
   private final Vector3d field_175003_W;
   private boolean field_175005_X;
   IRenderChunkFactory field_175007_a;
   private double field_147596_f;
   private double field_147597_g;
   private double field_147602_h;
   public boolean field_147595_R;
   private static final String __OBFID = "CL_00000954";
   private CloudRenderer cloudRenderer;
   public Entity renderedEntity;
   public Set chunksToResortTransparency;
   public Set chunksToUpdateForced;
   private Deque visibilityDeque;
   private List renderInfosEntities;
   private List renderInfosTileEntities;
   private List renderInfosNormal;
   private List renderInfosEntitiesNormal;
   private List renderInfosTileEntitiesNormal;
   private List renderInfosShadow;
   private List renderInfosEntitiesShadow;
   private List renderInfosTileEntitiesShadow;
   private int renderDistance;
   private int renderDistanceSq;
   private static final Set SET_ALL_FACINGS = Collections.unmodifiableSet(new HashSet(Arrays.asList(EnumFacing.values())));
   private int countTileEntitiesRendered;

   public RenderGlobal(Minecraft p_i1249_1_) {
      this.field_72755_R = Lists.newArrayListWithCapacity(OBFVAL_0.get());
      this.field_181024_n = Sets.newHashSet();
      this.field_72772_v = -1;
      this.field_72771_w = -1;
      this.field_72781_x = -1;
      this.field_72738_E = Maps.newHashMap();
      this.field_147593_P = Maps.newHashMap();
      this.field_94141_F = new TextureAtlasSprite[OBFVAL_1.get()];
      this.field_174992_B = OBFVAL_2.get();
      this.field_174993_C = OBFVAL_2.get();
      this.field_174987_D = OBFVAL_2.get();
      this.field_174988_E = OBFVAL_3.get();
      this.field_174989_F = OBFVAL_3.get();
      this.field_174990_G = OBFVAL_3.get();
      this.field_174997_H = OBFVAL_2.get();
      this.field_174998_I = OBFVAL_2.get();
      this.field_174999_J = OBFVAL_2.get();
      this.field_175000_K = OBFVAL_2.get();
      this.field_174994_L = OBFVAL_2.get();
      this.field_174995_M = new ChunkRenderDispatcher();
      this.field_72739_F = -1;
      this.field_72740_G = OBFVAL_4.get();
      this.field_175002_T = false;
      this.field_175004_V = new Vector4f[OBFVAL_5.get()];
      this.field_175003_W = new Vector3d();
      this.field_175005_X = false;
      this.field_147595_R = true;
      this.chunksToResortTransparency = new LinkedHashSet();
      this.chunksToUpdateForced = new LinkedHashSet();
      this.visibilityDeque = new ArrayDeque();
      this.renderInfosEntities = new ArrayList(OBFVAL_6.get());
      this.renderInfosTileEntities = new ArrayList(OBFVAL_6.get());
      this.renderInfosNormal = new ArrayList(OBFVAL_6.get());
      this.renderInfosEntitiesNormal = new ArrayList(OBFVAL_6.get());
      this.renderInfosTileEntitiesNormal = new ArrayList(OBFVAL_6.get());
      this.renderInfosShadow = new ArrayList(OBFVAL_6.get());
      this.renderInfosEntitiesShadow = new ArrayList(OBFVAL_6.get());
      this.renderInfosTileEntitiesShadow = new ArrayList(OBFVAL_6.get());
      this.renderDistance = 0;
      this.renderDistanceSq = 0;
      this.cloudRenderer = new CloudRenderer(p_i1249_1_);
      this.field_72777_q = p_i1249_1_;
      this.field_175010_j = p_i1249_1_.func_175598_ae();
      this.field_72770_i = p_i1249_1_.func_110434_K();
      this.field_72770_i.func_110577_a(field_175006_g);
      GL11.glTexParameteri(OBFVAL_7.get(), OBFVAL_8.get(), OBFVAL_9.get());
      GL11.glTexParameteri(OBFVAL_7.get(), OBFVAL_10.get(), OBFVAL_9.get());
      GlStateManager.func_179144_i(0);
      this.func_174971_n();
      this.field_175005_X = OpenGlHelper.func_176075_f();
      if(this.field_175005_X) {
         this.field_174996_N = new VboRenderList();
         this.field_175007_a = new VboChunkFactory();
      } else {
         this.field_174996_N = new RenderList();
         this.field_175007_a = new ListChunkFactory();
      }

      this.field_175014_r = new VertexFormat();
      this.field_175014_r.func_181721_a(new VertexFormatElement(0, EnumType.FLOAT, EnumUsage.POSITION, OBFVAL_11.get()));
      this.func_174963_q();
      this.func_174980_p();
      this.func_174964_o();
   }

   public void func_110549_a(IResourceManager p_110549_1_) {
      this.func_174971_n();
   }

   private void func_174971_n() {
      TextureMap texturemap = this.field_72777_q.func_147117_R();

      for(int i = 0; i < this.field_94141_F.length; ++i) {
         this.field_94141_F[i] = texturemap.func_110572_b("minecraft:blocks/destroy_stage_" + i);
      }

   }

   public void func_174966_b() {
      if(OpenGlHelper.field_148824_g) {
         if(ShaderLinkHelper.func_148074_b() == null) {
            ShaderLinkHelper.func_148076_a();
         }

         ResourceLocation resourcelocation = new ResourceLocation("shaders/post/entity_outline.json");

         try {
            this.field_174991_A = new ShaderGroup(this.field_72777_q.func_110434_K(), this.field_72777_q.func_110442_L(), this.field_72777_q.func_147110_a(), resourcelocation);
            this.field_174991_A.func_148026_a(this.field_72777_q.field_71443_c, this.field_72777_q.field_71440_d);
            this.field_175015_z = this.field_174991_A.func_177066_a("final");
         } catch (IOException ioexception) {
            field_147599_m.warn((String)("Failed to load shader: " + resourcelocation), (Throwable)ioexception);
            this.field_174991_A = null;
            this.field_175015_z = null;
         } catch (JsonSyntaxException jsonsyntaxexception) {
            field_147599_m.warn((String)("Failed to load shader: " + resourcelocation), (Throwable)jsonsyntaxexception);
            this.field_174991_A = null;
            this.field_175015_z = null;
         }
      } else {
         this.field_174991_A = null;
         this.field_175015_z = null;
      }

   }

   public void func_174975_c() {
      if(this.func_174985_d()) {
         GlStateManager.func_179147_l();
         GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 0, 1);
         this.field_175015_z.func_178038_a(this.field_72777_q.field_71443_c, this.field_72777_q.field_71440_d, false);
         GlStateManager.func_179084_k();
      }

   }

   protected boolean func_174985_d() {
      return !Config.isFastRender() && !Config.isShaders() && !Config.isAntialiasing()?this.field_175015_z != null && this.field_174991_A != null && this.field_72777_q.field_71439_g != null:false;
   }

   private void func_174964_o() {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      if(this.field_175011_u != null) {
         this.field_175011_u.func_177362_c();
      }

      if(this.field_72781_x >= 0) {
         GLAllocation.func_74523_b(this.field_72781_x);
         this.field_72781_x = -1;
      }

      if(this.field_175005_X) {
         this.field_175011_u = new VertexBuffer(this.field_175014_r);
         this.func_174968_a(worldrenderer, OBFVAL_14.get(), true);
         worldrenderer.func_178977_d();
         worldrenderer.func_178965_a();
         this.field_175011_u.func_181722_a(worldrenderer.func_178966_f());
      } else {
         this.field_72781_x = GLAllocation.func_74526_a(1);
         GL11.glNewList(this.field_72781_x, OBFVAL_15.get());
         this.func_174968_a(worldrenderer, OBFVAL_14.get(), true);
         tessellator.func_78381_a();
         GL11.glEndList();
      }

   }

   private void func_174980_p() {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      if(this.field_175012_t != null) {
         this.field_175012_t.func_177362_c();
      }

      if(this.field_72771_w >= 0) {
         GLAllocation.func_74523_b(this.field_72771_w);
         this.field_72771_w = -1;
      }

      if(this.field_175005_X) {
         this.field_175012_t = new VertexBuffer(this.field_175014_r);
         this.func_174968_a(worldrenderer, OBFVAL_16.get(), false);
         worldrenderer.func_178977_d();
         worldrenderer.func_178965_a();
         this.field_175012_t.func_181722_a(worldrenderer.func_178966_f());
      } else {
         this.field_72771_w = GLAllocation.func_74526_a(1);
         GL11.glNewList(this.field_72771_w, OBFVAL_15.get());
         this.func_174968_a(worldrenderer, OBFVAL_16.get(), false);
         tessellator.func_78381_a();
         GL11.glEndList();
      }

   }

   private void func_174968_a(WorldRenderer p_174968_1_, float p_174968_2_, boolean p_174968_3_) {
      boolean flag = true;
      boolean flag1 = true;
      p_174968_1_.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181705_e);

      for(int i = OBFVAL_18.get(); i <= OBFVAL_19.get(); i += 64) {
         for(int j = OBFVAL_18.get(); j <= OBFVAL_19.get(); j += 64) {
            float f = (float)i;
            float f1 = (float)(i + OBFVAL_20.get());
            if(p_174968_3_) {
               f1 = (float)i;
               f = (float)(i + OBFVAL_20.get());
            }

            p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)j).func_181675_d();
            p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)j).func_181675_d();
            p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)(j + OBFVAL_20.get())).func_181675_d();
            p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)(j + OBFVAL_20.get())).func_181675_d();
         }
      }

   }

   private void func_174963_q() {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      if(this.field_175013_s != null) {
         this.field_175013_s.func_177362_c();
      }

      if(this.field_72772_v >= 0) {
         GLAllocation.func_74523_b(this.field_72772_v);
         this.field_72772_v = -1;
      }

      if(this.field_175005_X) {
         this.field_175013_s = new VertexBuffer(this.field_175014_r);
         this.func_180444_a(worldrenderer);
         worldrenderer.func_178977_d();
         worldrenderer.func_178965_a();
         this.field_175013_s.func_181722_a(worldrenderer.func_178966_f());
      } else {
         this.field_72772_v = GLAllocation.func_74526_a(1);
         GlStateManager.func_179094_E();
         GL11.glNewList(this.field_72772_v, OBFVAL_15.get());
         this.func_180444_a(worldrenderer);
         tessellator.func_78381_a();
         GL11.glEndList();
         GlStateManager.func_179121_F();
      }

   }

   private void func_180444_a(WorldRenderer p_180444_1_) {
      Random random = new Random(OBFVAL_21.get());
      p_180444_1_.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181705_e);

      for(int i = 0; i < OBFVAL_22.get(); ++i) {
         double d0 = (double)(random.nextFloat() * OBFVAL_23.get() - 1.0F);
         double d1 = (double)(random.nextFloat() * OBFVAL_23.get() - 1.0F);
         double d2 = (double)(random.nextFloat() * OBFVAL_23.get() - 1.0F);
         double d3 = (double)(OBFVAL_24.get() + random.nextFloat() * OBFVAL_25.get());
         double d4 = d0 * d0 + d1 * d1 + d2 * d2;
         if(d4 < 1.0D && d4 > OBFVAL_26.get()) {
            d4 = 1.0D / Math.sqrt(d4);
            d0 = d0 * d4;
            d1 = d1 * d4;
            d2 = d2 * d4;
            double d5 = d0 * OBFVAL_27.get();
            double d6 = d1 * OBFVAL_27.get();
            double d7 = d2 * OBFVAL_27.get();
            double d8 = Math.atan2(d0, d2);
            double d9 = Math.sin(d8);
            double d10 = Math.cos(d8);
            double d11 = Math.atan2(Math.sqrt(d0 * d0 + d2 * d2), d1);
            double d12 = Math.sin(d11);
            double d13 = Math.cos(d11);
            double d14 = random.nextDouble() * OBFVAL_28.get() * OBFVAL_29.get();
            double d15 = Math.sin(d14);
            double d16 = Math.cos(d14);

            for(int j = 0; j < OBFVAL_30.get(); ++j) {
               double d17 = 0.0D;
               double d18 = (double)((j & OBFVAL_4.get()) - 1) * d3;
               double d19 = (double)((j + 1 & OBFVAL_4.get()) - 1) * d3;
               double d20 = 0.0D;
               double d21 = d18 * d16 - d19 * d15;
               double d22 = d19 * d16 + d18 * d15;
               double d23 = d21 * d12 + 0.0D * d13;
               double d24 = 0.0D * d12 - d21 * d13;
               double d25 = d24 * d9 - d22 * d10;
               double d26 = d22 * d9 + d24 * d10;
               p_180444_1_.func_181662_b(d5 + d25, d6 + d23, d7 + d26).func_181675_d();
            }
         }
      }

   }

   public void func_72732_a(WorldClient p_72732_1_) {
      if(this.field_72769_h != null) {
         this.field_72769_h.b(this);
      }

      this.field_174992_B = OBFVAL_2.get();
      this.field_174993_C = OBFVAL_2.get();
      this.field_174987_D = OBFVAL_2.get();
      this.field_174988_E = OBFVAL_3.get();
      this.field_174989_F = OBFVAL_3.get();
      this.field_174990_G = OBFVAL_3.get();
      this.field_175010_j.func_78717_a(p_72732_1_);
      this.field_72769_h = p_72732_1_;
      if(Config.isDynamicLights()) {
         DynamicLights.clear();
      }

      if(p_72732_1_ != null) {
         p_72732_1_.a(this);
         this.func_72712_a();
      }

   }

   public void func_72712_a() {
      if(this.field_72769_h != null) {
         this.field_147595_R = true;
         Blocks.field_150362_t.func_150122_b(Config.isTreesFancy());
         Blocks.field_150361_u.func_150122_b(Config.isTreesFancy());
         BlockModelRenderer.updateAoLightValue();
         if(Config.isDynamicLights()) {
            DynamicLights.clear();
         }

         this.field_72739_F = this.field_72777_q.field_71474_y.field_151451_c;
         this.renderDistance = this.field_72739_F * OBFVAL_31.get();
         this.renderDistanceSq = this.renderDistance * this.renderDistance;
         boolean flag = this.field_175005_X;
         this.field_175005_X = OpenGlHelper.func_176075_f();
         if(flag && !this.field_175005_X) {
            this.field_174996_N = new RenderList();
            this.field_175007_a = new ListChunkFactory();
         } else if(!flag && this.field_175005_X) {
            this.field_174996_N = new VboRenderList();
            this.field_175007_a = new VboChunkFactory();
         }

         if(flag != this.field_175005_X) {
            this.func_174963_q();
            this.func_174980_p();
            this.func_174964_o();
         }

         if(this.field_175008_n != null) {
            this.field_175008_n.func_178160_a();
         }

         this.func_174986_e();
         Set entity = this.field_181024_n;
         synchronized(this.field_181024_n) {
            this.field_181024_n.clear();
         }

         this.field_175008_n = new ViewFrustum(this.field_72769_h, this.field_72777_q.field_71474_y.field_151451_c, this, this.field_175007_a);
         if(this.field_72769_h != null) {
            Entity entity = this.field_72777_q.func_175606_aa();
            if(entity != null) {
               this.field_175008_n.func_178163_a(entity.field_70165_t, entity.field_70161_v);
            }
         }

         this.field_72740_G = OBFVAL_4.get();
      }

   }

   protected void func_174986_e() {
      this.field_175009_l.clear();
      this.field_174995_M.func_178514_b();
   }

   public void func_72720_a(int p_72720_1_, int p_72720_2_) {
      if(OpenGlHelper.field_148824_g && this.field_174991_A != null) {
         this.field_174991_A.func_148026_a(p_72720_1_, p_72720_2_);
      }

   }

   public void func_180446_a(Entity p_180446_1_, ICamera p_180446_2_, float p_180446_3_) {
      int i = 0;
      if(Reflector.MinecraftForgeClient_getRenderPass.exists()) {
         i = Reflector.callInt(Reflector.MinecraftForgeClient_getRenderPass, new Object[0]);
      }

      if(this.field_72740_G > 0) {
         if(i > 0) {
            return;
         }

         --this.field_72740_G;
      } else {
         double d0 = p_180446_1_.field_70169_q + (p_180446_1_.field_70165_t - p_180446_1_.field_70169_q) * (double)p_180446_3_;
         double d1 = p_180446_1_.field_70167_r + (p_180446_1_.field_70163_u - p_180446_1_.field_70167_r) * (double)p_180446_3_;
         double d2 = p_180446_1_.field_70166_s + (p_180446_1_.field_70161_v - p_180446_1_.field_70166_s) * (double)p_180446_3_;
         this.field_72769_h.B.func_76320_a("prepare");
         TileEntityRendererDispatcher.field_147556_a.func_178470_a(this.field_72769_h, this.field_72777_q.func_110434_K(), this.field_72777_q.field_71466_p, this.field_72777_q.func_175606_aa(), p_180446_3_);
         this.field_175010_j.func_180597_a(this.field_72769_h, this.field_72777_q.field_71466_p, this.field_72777_q.func_175606_aa(), this.field_72777_q.field_147125_j, this.field_72777_q.field_71474_y, p_180446_3_);
         if(i == 0) {
            this.field_72748_H = 0;
            this.field_72749_I = 0;
            this.field_72750_J = 0;
            this.countTileEntitiesRendered = 0;
         }

         Entity entity = this.field_72777_q.func_175606_aa();
         double d3 = entity.field_70142_S + (entity.field_70165_t - entity.field_70142_S) * (double)p_180446_3_;
         double d4 = entity.field_70137_T + (entity.field_70163_u - entity.field_70137_T) * (double)p_180446_3_;
         double d5 = entity.field_70136_U + (entity.field_70161_v - entity.field_70136_U) * (double)p_180446_3_;
         TileEntityRendererDispatcher.field_147554_b = d3;
         TileEntityRendererDispatcher.field_147555_c = d4;
         TileEntityRendererDispatcher.field_147552_d = d5;
         this.field_175010_j.func_178628_a(d3, d4, d5);
         this.field_72777_q.field_71460_t.func_180436_i();
         this.field_72769_h.B.func_76318_c("global");
         List<Entity> list = this.field_72769_h.E();
         if(i == 0) {
            this.field_72748_H = list.size();
         }

         if(Config.isFogOff() && this.field_72777_q.field_71460_t.fogStandard) {
            GlStateManager.func_179106_n();
         }

         boolean flag = Reflector.ForgeEntity_shouldRenderInPass.exists();
         boolean flag1 = Reflector.ForgeTileEntity_shouldRenderInPass.exists();

         for(int j = 0; j < this.field_72769_h.k.size(); ++j) {
            Entity entity1 = (Entity)this.field_72769_h.k.get(j);
            if(!flag || Reflector.callBoolean(entity1, Reflector.ForgeEntity_shouldRenderInPass, new Object[]{Integer.valueOf(i)})) {
               ++this.field_72749_I;
               if(entity1.func_145770_h(d0, d1, d2)) {
                  this.field_175010_j.func_147937_a(entity1, p_180446_3_);
               }
            }
         }

         if(this.func_174985_d() && !list.isEmpty()) {
            ;
         }

         this.field_72769_h.B.func_76318_c("entities");
         boolean flag5 = Config.isShaders();
         if(flag5) {
            Shaders.beginEntities();
         }

         Iterator iterator1 = this.renderInfosEntities.iterator();
         boolean flag2 = this.field_72777_q.field_71474_y.field_74347_j;
         this.field_72777_q.field_71474_y.field_74347_j = Config.isDroppedItemsFancy();

         label603:
         while(iterator1.hasNext()) {
            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = (RenderGlobal.ContainerLocalRenderInformation)iterator1.next();
            Chunk chunk = this.field_72769_h.f(renderglobal$containerlocalrenderinformation.field_178036_a.func_178568_j());
            ClassInheritanceMultiMap classinheritancemultimap = chunk.func_177429_s()[renderglobal$containerlocalrenderinformation.field_178036_a.func_178568_j().o() / OBFVAL_31.get()];
            if(!classinheritancemultimap.isEmpty()) {
               Iterator iterator = classinheritancemultimap.iterator();

               while(true) {
                  Entity entity2;
                  boolean flag3;
                  while(true) {
                     if(!iterator.hasNext()) {
                        continue label603;
                     }

                     entity2 = (Entity)iterator.next();
                     if(!flag || Reflector.callBoolean(entity2, Reflector.ForgeEntity_shouldRenderInPass, new Object[]{Integer.valueOf(i)})) {
                        flag3 = this.field_175010_j.func_178635_a(entity2, p_180446_2_, d0, d1, d2) || entity2.field_70153_n == this.field_72777_q.field_71439_g;
                        if(!flag3) {
                           break;
                        }

                        boolean flag4 = this.field_72777_q.func_175606_aa() instanceof EntityLivingBase?((EntityLivingBase)this.field_72777_q.func_175606_aa()).func_70608_bn():false;
                        if((entity2 != this.field_72777_q.func_175606_aa() || this.field_72777_q.field_71474_y.field_74320_O != 0 || flag4) && (entity2.field_70163_u < 0.0D || entity2.field_70163_u >= OBFVAL_32.get() || this.field_72769_h.e(new BlockPos(entity2)))) {
                           ++this.field_72749_I;
                           if(entity2.getClass() == EntityItemFrame.class) {
                              entity2.field_70155_l = OBFVAL_33.get();
                           }

                           this.renderedEntity = entity2;
                           if(flag5) {
                              Shaders.nextEntity(entity2);
                           }

                           this.field_175010_j.func_147937_a(entity2, p_180446_3_);
                           this.renderedEntity = null;
                           break;
                        }
                     }
                  }

                  if(!flag3 && entity2 instanceof EntityWitherSkull) {
                     if(flag5) {
                        Shaders.nextEntity(entity2);
                     }

                     this.field_72777_q.func_175598_ae().func_178630_b(entity2, p_180446_3_);
                  }
               }
            }
         }

         this.field_72777_q.field_71474_y.field_74347_j = flag2;
         FontRenderer fontrenderer = TileEntityRendererDispatcher.field_147556_a.func_147548_a();
         if(flag5) {
            Shaders.endEntities();
            Shaders.beginBlockEntities();
         }

         this.field_72769_h.B.func_76318_c("blockentities");
         RenderHelper.func_74519_b();
         if(Reflector.ForgeTileEntityRendererDispatcher_preDrawBatch.exists()) {
            Reflector.call(TileEntityRendererDispatcher.field_147556_a, Reflector.ForgeTileEntityRendererDispatcher_preDrawBatch, new Object[0]);
         }

         label1084:
         for(Object object : this.renderInfosTileEntities) {
            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 = (RenderGlobal.ContainerLocalRenderInformation)object;
            List list1 = renderglobal$containerlocalrenderinformation1.field_178036_a.func_178571_g().func_178485_b();
            if(!list1.isEmpty()) {
               Iterator iterator3 = list1.iterator();

               while(true) {
                  TileEntity tileentity1;
                  while(true) {
                     if(!iterator3.hasNext()) {
                        continue label1084;
                     }

                     tileentity1 = (TileEntity)iterator3.next();
                     if(!flag1) {
                        break;
                     }

                     if(Reflector.callBoolean(tileentity1, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[]{Integer.valueOf(i)})) {
                        AxisAlignedBB axisalignedbb = (AxisAlignedBB)Reflector.call(tileentity1, Reflector.ForgeTileEntity_getRenderBoundingBox, new Object[0]);
                        if(axisalignedbb == null || p_180446_2_.func_78546_a(axisalignedbb)) {
                           break;
                        }
                     }
                  }

                  Class oclass1 = tileentity1.getClass();
                  if(oclass1 == TileEntitySign.class && !Config.zoomMode) {
                     EntityPlayer entityplayer = this.field_72777_q.field_71439_g;
                     double d6 = tileentity1.func_145835_a(entityplayer.field_70165_t, entityplayer.field_70163_u, entityplayer.field_70161_v);
                     if(d6 > OBFVAL_32.get()) {
                        fontrenderer.enabled = false;
                     }
                  }

                  if(flag5) {
                     Shaders.nextBlockEntity(tileentity1);
                  }

                  TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity1, p_180446_3_, -1);
                  ++this.countTileEntitiesRendered;
                  fontrenderer.enabled = true;
               }
            }
         }

         Set set = this.field_181024_n;
         synchronized(this.field_181024_n) {
            Iterator destroyblockprogress = this.field_181024_n.iterator();

            label1364:
            while(true) {
               Object object2;
               while(true) {
                  if(!destroyblockprogress.hasNext()) {
                     break label1364;
                  }

                  object2 = destroyblockprogress.next();
                  if(!flag1) {
                     break;
                  }

                  if(Reflector.callBoolean(object2, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[]{Integer.valueOf(i)})) {
                     AxisAlignedBB axisalignedbb1 = (AxisAlignedBB)Reflector.call(object2, Reflector.ForgeTileEntity_getRenderBoundingBox, new Object[0]);
                     if(axisalignedbb1 == null || p_180446_2_.func_78546_a(axisalignedbb1)) {
                        break;
                     }
                  }
               }

               Class oclass = object2.getClass();
               if(oclass == TileEntitySign.class && !Config.zoomMode) {
                  EntityPlayer entityplayer1 = this.field_72777_q.field_71439_g;
                  double d7 = ((TileEntity)object2).func_145835_a(entityplayer1.field_70165_t, entityplayer1.field_70163_u, entityplayer1.field_70161_v);
                  if(d7 > OBFVAL_32.get()) {
                     fontrenderer.enabled = false;
                  }
               }

               if(flag5) {
                  Shaders.nextBlockEntity((TileEntity)object2);
               }

               TileEntityRendererDispatcher.field_147556_a.func_180546_a((TileEntity)object2, p_180446_3_, -1);
               fontrenderer.enabled = true;
            }
         }

         if(Reflector.ForgeTileEntityRendererDispatcher_drawBatch.exists()) {
            Reflector.call(TileEntityRendererDispatcher.field_147556_a, Reflector.ForgeTileEntityRendererDispatcher_drawBatch, new Object[]{Integer.valueOf(i)});
         }

         this.func_180443_s();

         for(Object object1 : this.field_72738_E.values()) {
            BlockPos blockpos = ((DestroyBlockProgress)object1).func_180246_b();
            TileEntity tileentity = this.field_72769_h.s(blockpos);
            if(tileentity instanceof TileEntityChest) {
               TileEntityChest tileentitychest = (TileEntityChest)tileentity;
               if(tileentitychest.field_145991_k != null) {
                  blockpos = blockpos.func_177972_a(EnumFacing.WEST);
                  tileentity = this.field_72769_h.s(blockpos);
               } else if(tileentitychest.field_145992_i != null) {
                  blockpos = blockpos.func_177972_a(EnumFacing.NORTH);
                  tileentity = this.field_72769_h.s(blockpos);
               }
            }

            Block block = this.field_72769_h.p(blockpos).func_177230_c();
            boolean flag6;
            if(flag1) {
               flag6 = false;
               if(tileentity != null && Reflector.callBoolean(tileentity, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[]{Integer.valueOf(i)}) && Reflector.callBoolean(tileentity, Reflector.ForgeTileEntity_canRenderBreaking, new Object[0])) {
                  AxisAlignedBB axisalignedbb2 = (AxisAlignedBB)Reflector.call(tileentity, Reflector.ForgeTileEntity_getRenderBoundingBox, new Object[0]);
                  if(axisalignedbb2 != null) {
                     flag6 = p_180446_2_.func_78546_a(axisalignedbb2);
                  }
               }
            } else {
               flag6 = tileentity != null && (block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull);
            }

            if(flag6) {
               if(flag5) {
                  Shaders.nextBlockEntity(tileentity);
               }

               TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity, p_180446_3_, ((DestroyBlockProgress)object1).func_73106_e());
            }
         }

         this.func_174969_t();
         this.field_72777_q.field_71460_t.func_175072_h();
         this.field_72777_q.field_71424_I.func_76319_b();
      }

   }

   public String func_72735_c() {
      int i = this.field_175008_n.field_178164_f.length;
      int j = 0;

      for(Object object : this.field_72755_R) {
         RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = (RenderGlobal.ContainerLocalRenderInformation)object;
         CompiledChunk compiledchunk = renderglobal$containerlocalrenderinformation.field_178036_a.field_178590_b;
         if(compiledchunk != CompiledChunk.field_178502_a && !compiledchunk.func_178489_a()) {
            ++j;
         }
      }

      Object[] aobject = new Object[OBFVAL_34.get()];
      aobject[0] = Integer.valueOf(j);
      aobject[1] = Integer.valueOf(i);
      aobject[OBFVAL_4.get()] = this.field_72777_q.field_175612_E?"(s) ":"";
      aobject[OBFVAL_11.get()] = Integer.valueOf(this.field_72739_F);
      aobject[OBFVAL_30.get()] = this.field_174995_M.func_178504_a();
      return String.format("C: %d/%d %sD: %d, %s", aobject);
   }

   public String func_72723_d() {
      return "Entities: " + this.field_72749_I + "/" + this.field_72748_H + ", B: " + this.field_72750_J + ", I: " + (this.field_72748_H - this.field_72750_J - this.field_72749_I);
   }

   public void func_174970_a(Entity p_174970_1_, double p_174970_2_, ICamera p_174970_4_, int p_174970_5_, boolean p_174970_6_) {
      if(this.field_72777_q.field_71474_y.field_151451_c != this.field_72739_F) {
         this.func_72712_a();
      }

      this.field_72769_h.B.func_76320_a("camera");
      double d0 = p_174970_1_.field_70165_t - this.field_174992_B;
      double d1 = p_174970_1_.field_70163_u - this.field_174993_C;
      double d2 = p_174970_1_.field_70161_v - this.field_174987_D;
      if(this.field_174988_E != p_174970_1_.field_70176_ah || this.field_174989_F != p_174970_1_.field_70162_ai || this.field_174990_G != p_174970_1_.field_70164_aj || d0 * d0 + d1 * d1 + d2 * d2 > OBFVAL_35.get()) {
         this.field_174992_B = p_174970_1_.field_70165_t;
         this.field_174993_C = p_174970_1_.field_70163_u;
         this.field_174987_D = p_174970_1_.field_70161_v;
         this.field_174988_E = p_174970_1_.field_70176_ah;
         this.field_174989_F = p_174970_1_.field_70162_ai;
         this.field_174990_G = p_174970_1_.field_70164_aj;
         this.field_175008_n.func_178163_a(p_174970_1_.field_70165_t, p_174970_1_.field_70161_v);
      }

      if(Config.isDynamicLights()) {
         DynamicLights.update(this);
      }

      this.field_72769_h.B.func_76318_c("renderlistcamera");
      double d3 = p_174970_1_.field_70142_S + (p_174970_1_.field_70165_t - p_174970_1_.field_70142_S) * p_174970_2_;
      double d4 = p_174970_1_.field_70137_T + (p_174970_1_.field_70163_u - p_174970_1_.field_70137_T) * p_174970_2_;
      double d5 = p_174970_1_.field_70136_U + (p_174970_1_.field_70161_v - p_174970_1_.field_70136_U) * p_174970_2_;
      this.field_174996_N.func_178004_a(d3, d4, d5);
      this.field_72769_h.B.func_76318_c("cull");
      if(this.field_175001_U != null) {
         Frustum frustum = new Frustum(this.field_175001_U);
         frustum.func_78547_a(this.field_175003_W.field_181059_a, this.field_175003_W.field_181060_b, this.field_175003_W.field_181061_c);
         p_174970_4_ = frustum;
      }

      this.field_72777_q.field_71424_I.func_76318_c("culling");
      BlockPos blockpos3 = new BlockPos(d3, d4 + (double)p_174970_1_.func_70047_e(), d5);
      RenderChunk renderchunk = this.field_175008_n.func_178161_a(blockpos3);
      BlockPos blockpos = new BlockPos(MathHelper.func_76128_c(d3 / OBFVAL_35.get()) * OBFVAL_31.get(), MathHelper.func_76128_c(d4 / OBFVAL_35.get()) * OBFVAL_31.get(), MathHelper.func_76128_c(d5 / OBFVAL_35.get()) * OBFVAL_31.get());
      this.field_147595_R = this.field_147595_R || !this.field_175009_l.isEmpty() || p_174970_1_.field_70165_t != this.field_174997_H || p_174970_1_.field_70163_u != this.field_174998_I || p_174970_1_.field_70161_v != this.field_174999_J || (double)p_174970_1_.field_70125_A != this.field_175000_K || (double)p_174970_1_.field_70177_z != this.field_174994_L;
      this.field_174997_H = p_174970_1_.field_70165_t;
      this.field_174998_I = p_174970_1_.field_70163_u;
      this.field_174999_J = p_174970_1_.field_70161_v;
      this.field_175000_K = (double)p_174970_1_.field_70125_A;
      this.field_174994_L = (double)p_174970_1_.field_70177_z;
      boolean flag = this.field_175001_U != null;
      Lagometer.timerVisibility.start();
      if(Shaders.isShadowPass) {
         this.field_72755_R = this.renderInfosShadow;
         this.renderInfosEntities = this.renderInfosEntitiesShadow;
         this.renderInfosTileEntities = this.renderInfosTileEntitiesShadow;
         if(!flag && this.field_147595_R) {
            this.field_72755_R.clear();
            this.renderInfosEntities.clear();
            this.renderInfosTileEntities.clear();
            RenderInfoLazy renderinfolazy = new RenderInfoLazy();
            Iterator<RenderChunk> iterator = ShadowUtils.makeShadowChunkIterator(this.field_72769_h, p_174970_2_, p_174970_1_, this.field_72739_F, this.field_175008_n);

            while(iterator.hasNext()) {
               RenderChunk renderchunk1 = (RenderChunk)iterator.next();
               if(renderchunk1 != null) {
                  renderinfolazy.setRenderChunk(renderchunk1);
                  if(!renderchunk1.field_178590_b.func_178489_a() || renderchunk1.func_178569_m()) {
                     this.field_72755_R.add(renderinfolazy.getRenderInfo());
                  }

                  BlockPos blockpos1 = renderchunk1.func_178568_j();
                  if(ChunkUtils.hasEntities(this.field_72769_h.f(blockpos1))) {
                     this.renderInfosEntities.add(renderinfolazy.getRenderInfo());
                  }

                  if(renderchunk1.func_178571_g().func_178485_b().size() > 0) {
                     this.renderInfosTileEntities.add(renderinfolazy.getRenderInfo());
                  }
               }
            }
         }
      } else {
         this.field_72755_R = this.renderInfosNormal;
         this.renderInfosEntities = this.renderInfosEntitiesNormal;
         this.renderInfosTileEntities = this.renderInfosTileEntitiesNormal;
      }

      if(!flag && this.field_147595_R && !Shaders.isShadowPass) {
         this.field_147595_R = false;
         this.field_72755_R.clear();
         this.renderInfosEntities.clear();
         this.renderInfosTileEntities.clear();
         this.visibilityDeque.clear();
         Deque deque = this.visibilityDeque;
         boolean flag1 = this.field_72777_q.field_175612_E;
         if(renderchunk != null) {
            boolean flag2 = false;
            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation2 = new RenderGlobal.ContainerLocalRenderInformation(renderchunk, (EnumFacing)null, 0, (Object)null);
            Set set1 = SET_ALL_FACINGS;
            if(set1.size() == 1) {
               Vector3f vector3f = this.func_174962_a(p_174970_1_, p_174970_2_);
               EnumFacing enumfacing = EnumFacing.func_176737_a(vector3f.x, vector3f.y, vector3f.z).func_176734_d();
               set1.remove(enumfacing);
            }

            if(set1.isEmpty()) {
               flag2 = true;
            }

            if(flag2 && !p_174970_6_) {
               this.field_72755_R.add(renderglobal$containerlocalrenderinformation2);
            } else {
               if(p_174970_6_ && this.field_72769_h.p(blockpos3).func_177230_c().func_149662_c()) {
                  flag1 = false;
               }

               renderchunk.func_178577_a(p_174970_5_);
               deque.add(renderglobal$containerlocalrenderinformation2);
            }
         } else {
            int k = blockpos3.o() > 0?OBFVAL_36.get():OBFVAL_5.get();

            for(int l = -this.field_72739_F; l <= this.field_72739_F; ++l) {
               for(int i = -this.field_72739_F; i <= this.field_72739_F; ++i) {
                  RenderChunk renderchunk2 = this.field_175008_n.func_178161_a(new BlockPos((l << OBFVAL_30.get()) + OBFVAL_5.get(), k, (i << OBFVAL_30.get()) + OBFVAL_5.get()));
                  if(renderchunk2 != null && ((ICamera)p_174970_4_).func_78546_a(renderchunk2.field_178591_c)) {
                     renderchunk2.func_178577_a(p_174970_5_);
                     deque.add(new RenderGlobal.ContainerLocalRenderInformation(renderchunk2, (EnumFacing)null, 0, (Object)null));
                  }
               }
            }
         }

         EnumFacing[] aenumfacing = EnumFacing.values();
         int i1 = aenumfacing.length;

         while(!deque.isEmpty()) {
            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation3 = (RenderGlobal.ContainerLocalRenderInformation)deque.poll();
            RenderChunk renderchunk5 = renderglobal$containerlocalrenderinformation3.field_178036_a;
            EnumFacing enumfacing2 = renderglobal$containerlocalrenderinformation3.field_178034_b;
            BlockPos blockpos2 = renderchunk5.func_178568_j();
            if(!renderchunk5.field_178590_b.func_178489_a() || renderchunk5.func_178569_m()) {
               this.field_72755_R.add(renderglobal$containerlocalrenderinformation3);
            }

            if(ChunkUtils.hasEntities(this.field_72769_h.f(blockpos2))) {
               this.renderInfosEntities.add(renderglobal$containerlocalrenderinformation3);
            }

            if(renderchunk5.func_178571_g().func_178485_b().size() > 0) {
               this.renderInfosTileEntities.add(renderglobal$containerlocalrenderinformation3);
            }

            for(int j = 0; j < i1; ++j) {
               EnumFacing enumfacing1 = aenumfacing[j];
               if((!flag1 || !renderglobal$containerlocalrenderinformation3.field_178035_c.contains(enumfacing1.func_176734_d())) && (!flag1 || enumfacing2 == null || renderchunk5.func_178571_g().func_178495_a(enumfacing2.func_176734_d(), enumfacing1))) {
                  RenderChunk renderchunk3 = this.func_181562_a(blockpos3, renderchunk5, enumfacing1);
                  if(renderchunk3 != null && renderchunk3.func_178577_a(p_174970_5_) && ((ICamera)p_174970_4_).func_78546_a(renderchunk3.field_178591_c)) {
                     RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = new RenderGlobal.ContainerLocalRenderInformation(renderchunk3, enumfacing1, renderglobal$containerlocalrenderinformation3.field_178032_d + 1, true);
                     renderglobal$containerlocalrenderinformation.field_178035_c.addAll(renderglobal$containerlocalrenderinformation3.field_178035_c);
                     renderglobal$containerlocalrenderinformation.field_178035_c.add(enumfacing1);
                     deque.add(renderglobal$containerlocalrenderinformation);
                  }
               }
            }
         }
      }

      if(this.field_175002_T) {
         this.func_174984_a(d3, d4, d5);
         this.field_175002_T = false;
      }

      Lagometer.timerVisibility.end();
      if(Shaders.isShadowPass) {
         Shaders.mcProfilerEndSection();
      } else {
         this.field_174995_M.func_178513_e();
         Set set = this.field_175009_l;
         this.field_175009_l = Sets.newLinkedHashSet();
         Iterator iterator1 = this.field_72755_R.iterator();
         Lagometer.timerChunkUpdate.start();

         while(iterator1.hasNext()) {
            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 = (RenderGlobal.ContainerLocalRenderInformation)iterator1.next();
            RenderChunk renderchunk4 = renderglobal$containerlocalrenderinformation1.field_178036_a;
            if(renderchunk4.func_178569_m() || set.contains(renderchunk4)) {
               this.field_147595_R = true;
               if(this.func_174983_a(blockpos, renderglobal$containerlocalrenderinformation1.field_178036_a)) {
                  if(!renderchunk4.isPlayerUpdate()) {
                     this.chunksToUpdateForced.add(renderchunk4);
                  } else {
                     this.field_72777_q.field_71424_I.func_76320_a("build near");
                     this.field_174995_M.func_178505_b(renderchunk4);
                     renderchunk4.func_178575_a(false);
                     this.field_72777_q.field_71424_I.func_76319_b();
                  }
               } else {
                  this.field_175009_l.add(renderchunk4);
               }
            }
         }

         Lagometer.timerChunkUpdate.end();
         this.field_175009_l.addAll(set);
         this.field_72777_q.field_71424_I.func_76319_b();
      }

   }

   private boolean func_174983_a(BlockPos p_174983_1_, RenderChunk p_174983_2_) {
      BlockPos blockpos = p_174983_2_.func_178568_j();
      return MathHelper.func_76130_a(p_174983_1_.n() - blockpos.n()) > OBFVAL_31.get()?false:(MathHelper.func_76130_a(p_174983_1_.o() - blockpos.o()) > OBFVAL_31.get()?false:MathHelper.func_76130_a(p_174983_1_.p() - blockpos.p()) <= OBFVAL_31.get());
   }

   private Set func_174978_c(BlockPos p_174978_1_) {
      VisGraph visgraph = new VisGraph();
      BlockPos blockpos = new BlockPos(p_174978_1_.n() >> OBFVAL_30.get() << OBFVAL_30.get(), p_174978_1_.o() >> OBFVAL_30.get() << OBFVAL_30.get(), p_174978_1_.p() >> OBFVAL_30.get() << OBFVAL_30.get());
      Chunk chunk = this.field_72769_h.f(blockpos);

      for(MutableBlockPos mutableblockpos : BlockPos.func_177975_b(blockpos, blockpos.func_177982_a(OBFVAL_37.get(), OBFVAL_37.get(), OBFVAL_37.get()))) {
         if(chunk.func_177428_a(mutableblockpos).func_149662_c()) {
            visgraph.func_178606_a(mutableblockpos);
         }
      }

      return visgraph.func_178609_b(p_174978_1_);
   }

   private RenderChunk func_181562_a(BlockPos p_181562_1_, RenderChunk p_181562_2_, EnumFacing p_181562_3_) {
      BlockPos blockpos = p_181562_2_.getPositionOffset16(p_181562_3_);
      if(blockpos.o() >= 0 && blockpos.o() < OBFVAL_38.get()) {
         int i = MathHelper.func_76130_a(p_181562_1_.n() - blockpos.n());
         int j = MathHelper.func_76130_a(p_181562_1_.p() - blockpos.p());
         if(Config.isFogOff()) {
            if(i > this.renderDistance || j > this.renderDistance) {
               return null;
            }
         } else {
            int k = i * i + j * j;
            if(k > this.renderDistanceSq) {
               return null;
            }
         }

         return this.field_175008_n.func_178161_a(blockpos);
      } else {
         return null;
      }
   }

   private void func_174984_a(double p_174984_1_, double p_174984_3_, double p_174984_5_) {
      this.field_175001_U = new ClippingHelperImpl();
      ((ClippingHelperImpl)this.field_175001_U).func_78560_b();
      Matrix4f matrix4f = new Matrix4f(this.field_175001_U.field_178626_c);
      matrix4f.transpose();
      Matrix4f matrix4f1 = new Matrix4f(this.field_175001_U.field_178625_b);
      matrix4f1.transpose();
      Matrix4f matrix4f2 = new Matrix4f();
      Matrix4f.mul(matrix4f1, matrix4f, matrix4f2);
      matrix4f2.invert();
      this.field_175003_W.field_181059_a = p_174984_1_;
      this.field_175003_W.field_181060_b = p_174984_3_;
      this.field_175003_W.field_181061_c = p_174984_5_;
      this.field_175004_V[0] = new Vector4f(OBFVAL_39.get(), OBFVAL_39.get(), OBFVAL_39.get(), 1.0F);
      this.field_175004_V[1] = new Vector4f(1.0F, OBFVAL_39.get(), OBFVAL_39.get(), 1.0F);
      this.field_175004_V[OBFVAL_4.get()] = new Vector4f(1.0F, 1.0F, OBFVAL_39.get(), 1.0F);
      this.field_175004_V[OBFVAL_11.get()] = new Vector4f(OBFVAL_39.get(), 1.0F, OBFVAL_39.get(), 1.0F);
      this.field_175004_V[OBFVAL_30.get()] = new Vector4f(OBFVAL_39.get(), OBFVAL_39.get(), 1.0F, 1.0F);
      this.field_175004_V[OBFVAL_34.get()] = new Vector4f(1.0F, OBFVAL_39.get(), 1.0F, 1.0F);
      this.field_175004_V[OBFVAL_40.get()] = new Vector4f(1.0F, 1.0F, 1.0F, 1.0F);
      this.field_175004_V[OBFVAL_17.get()] = new Vector4f(OBFVAL_39.get(), 1.0F, 1.0F, 1.0F);

      for(int i = 0; i < OBFVAL_5.get(); ++i) {
         Matrix4f.transform(matrix4f2, this.field_175004_V[i], this.field_175004_V[i]);
         this.field_175004_V[i].x /= this.field_175004_V[i].w;
         this.field_175004_V[i].y /= this.field_175004_V[i].w;
         this.field_175004_V[i].z /= this.field_175004_V[i].w;
         this.field_175004_V[i].w = 1.0F;
      }

   }

   protected Vector3f func_174962_a(Entity p_174962_1_, double p_174962_2_) {
      float f = (float)((double)p_174962_1_.field_70127_C + (double)(p_174962_1_.field_70125_A - p_174962_1_.field_70127_C) * p_174962_2_);
      float f1 = (float)((double)p_174962_1_.field_70126_B + (double)(p_174962_1_.field_70177_z - p_174962_1_.field_70126_B) * p_174962_2_);
      if(Minecraft.func_71410_x().field_71474_y.field_74320_O == OBFVAL_4.get()) {
         f += OBFVAL_41.get();
      }

      float f2 = MathHelper.func_76134_b(-f1 * OBFVAL_42.get() - OBFVAL_43.get());
      float f3 = MathHelper.func_76126_a(-f1 * OBFVAL_42.get() - OBFVAL_43.get());
      float f4 = -MathHelper.func_76134_b(-f * OBFVAL_42.get());
      float f5 = MathHelper.func_76126_a(-f * OBFVAL_42.get());
      return new Vector3f(f3 * f4, f5, f2 * f4);
   }

   public int func_174977_a(EnumWorldBlockLayer p_174977_1_, double p_174977_2_, int p_174977_4_, Entity p_174977_5_) {
      RenderHelper.func_74518_a();
      if(p_174977_1_ == EnumWorldBlockLayer.TRANSLUCENT) {
         this.field_72777_q.field_71424_I.func_76320_a("translucent_sort");
         double d0 = p_174977_5_.field_70165_t - this.field_147596_f;
         double d1 = p_174977_5_.field_70163_u - this.field_147597_g;
         double d2 = p_174977_5_.field_70161_v - this.field_147602_h;
         if(d0 * d0 + d1 * d1 + d2 * d2 > 1.0D) {
            this.field_147596_f = p_174977_5_.field_70165_t;
            this.field_147597_g = p_174977_5_.field_70163_u;
            this.field_147602_h = p_174977_5_.field_70161_v;
            int k = 0;
            Iterator iterator = this.field_72755_R.iterator();
            this.chunksToResortTransparency.clear();

            while(iterator.hasNext()) {
               RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = (RenderGlobal.ContainerLocalRenderInformation)iterator.next();
               if(renderglobal$containerlocalrenderinformation.field_178036_a.field_178590_b.func_178492_d(p_174977_1_) && k++ < OBFVAL_37.get()) {
                  this.chunksToResortTransparency.add(renderglobal$containerlocalrenderinformation.field_178036_a);
               }
            }
         }

         this.field_72777_q.field_71424_I.func_76319_b();
      }

      this.field_72777_q.field_71424_I.func_76320_a("filterempty");
      int l = 0;
      boolean flag = p_174977_1_ == EnumWorldBlockLayer.TRANSLUCENT;
      int i1 = flag?this.field_72755_R.size() - 1:0;
      int i = flag?-1:this.field_72755_R.size();
      int j1 = flag?-1:1;

      for(int j = i1; j != i; j += j1) {
         RenderChunk renderchunk = ((RenderGlobal.ContainerLocalRenderInformation)this.field_72755_R.get(j)).field_178036_a;
         if(!renderchunk.func_178571_g().func_178491_b(p_174977_1_)) {
            ++l;
            this.field_174996_N.func_178002_a(renderchunk, p_174977_1_);
         }
      }

      if(l == 0) {
         this.field_72777_q.field_71424_I.func_76319_b();
         return l;
      } else {
         if(Config.isFogOff() && this.field_72777_q.field_71460_t.fogStandard) {
            GlStateManager.func_179106_n();
         }

         this.field_72777_q.field_71424_I.func_76318_c("render_" + p_174977_1_);
         this.func_174982_a(p_174977_1_);
         this.field_72777_q.field_71424_I.func_76319_b();
         return l;
      }
   }

   private void func_174982_a(EnumWorldBlockLayer p_174982_1_) {
      this.field_72777_q.field_71460_t.func_180436_i();
      if(OpenGlHelper.func_176075_f()) {
         GL11.glEnableClientState(OBFVAL_44.get());
         OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a);
         GL11.glEnableClientState(OBFVAL_45.get());
         OpenGlHelper.func_77472_b(OpenGlHelper.field_77476_b);
         GL11.glEnableClientState(OBFVAL_45.get());
         OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a);
         GL11.glEnableClientState(OBFVAL_46.get());
      }

      if(Config.isShaders()) {
         ShadersRender.preRenderChunkLayer(p_174982_1_);
      }

      this.field_174996_N.func_178001_a(p_174982_1_);
      if(Config.isShaders()) {
         ShadersRender.postRenderChunkLayer(p_174982_1_);
      }

      if(OpenGlHelper.func_176075_f()) {
         for(VertexFormatElement vertexformatelement : DefaultVertexFormats.field_176600_a.func_177343_g()) {
            EnumUsage enumusage = vertexformatelement.func_177375_c();
            int i = vertexformatelement.func_177369_e();
            switch(RenderGlobal.RenderGlobal$RenderGlobal$2.field_178037_a[enumusage.ordinal()]) {
            case 1:
               GL11.glDisableClientState(OBFVAL_44.get());
               break;
            case 2:
               OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a + i);
               GL11.glDisableClientState(OBFVAL_45.get());
               OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a);
               break;
            case 3:
               GL11.glDisableClientState(OBFVAL_46.get());
               GlStateManager.func_179117_G();
            }
         }
      }

      this.field_72777_q.field_71460_t.func_175072_h();
   }

   private void func_174965_a(Iterator p_174965_1_) {
      while(p_174965_1_.hasNext()) {
         DestroyBlockProgress destroyblockprogress = (DestroyBlockProgress)p_174965_1_.next();
         int i = destroyblockprogress.func_82743_f();
         if(this.field_72773_u - i > OBFVAL_47.get()) {
            p_174965_1_.remove();
         }
      }

   }

   public void func_72734_e() {
      if(Config.isShaders() && Keyboard.isKeyDown(OBFVAL_48.get()) && Keyboard.isKeyDown(OBFVAL_49.get())) {
         Shaders.uninit();
         Shaders.loadShaderPack();
      }

      ++this.field_72773_u;
      if(this.field_72773_u % OBFVAL_50.get() == 0) {
         this.func_174965_a(this.field_72738_E.values().iterator());
      }

   }

   private void func_180448_r() {
      if(Config.isSkyEnabled()) {
         GlStateManager.func_179106_n();
         GlStateManager.func_179118_c();
         GlStateManager.func_179147_l();
         GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 1, 0);
         RenderHelper.func_74518_a();
         GlStateManager.func_179132_a(false);
         this.field_72770_i.func_110577_a(field_110926_k);
         Tessellator tessellator = Tessellator.func_178181_a();
         WorldRenderer worldrenderer = tessellator.func_178180_c();

         for(int i = 0; i < OBFVAL_40.get(); ++i) {
            GlStateManager.func_179094_E();
            if(i == 1) {
               GlStateManager.func_179114_b(OBFVAL_51.get(), 1.0F, 0.0F, 0.0F);
            }

            if(i == OBFVAL_4.get()) {
               GlStateManager.func_179114_b(OBFVAL_52.get(), 1.0F, 0.0F, 0.0F);
            }

            if(i == OBFVAL_11.get()) {
               GlStateManager.func_179114_b(OBFVAL_41.get(), 1.0F, 0.0F, 0.0F);
            }

            if(i == OBFVAL_30.get()) {
               GlStateManager.func_179114_b(OBFVAL_51.get(), 0.0F, 0.0F, 1.0F);
            }

            if(i == OBFVAL_34.get()) {
               GlStateManager.func_179114_b(OBFVAL_52.get(), 0.0F, 0.0F, 1.0F);
            }

            worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181709_i);
            worldrenderer.func_181662_b(OBFVAL_53.get(), OBFVAL_53.get(), OBFVAL_53.get()).func_181673_a(0.0D, 0.0D).func_181669_b(OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_53.get(), OBFVAL_53.get(), OBFVAL_27.get()).func_181673_a(0.0D, OBFVAL_35.get()).func_181669_b(OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_27.get(), OBFVAL_53.get(), OBFVAL_27.get()).func_181673_a(OBFVAL_35.get(), OBFVAL_35.get()).func_181669_b(OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_27.get(), OBFVAL_53.get(), OBFVAL_53.get()).func_181673_a(OBFVAL_35.get(), 0.0D).func_181669_b(OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_54.get(), OBFVAL_55.get()).func_181675_d();
            tessellator.func_78381_a();
            GlStateManager.func_179121_F();
         }

         GlStateManager.func_179132_a(true);
         GlStateManager.func_179098_w();
         GlStateManager.func_179141_d();
      }

   }

   public void func_174976_a(float p_174976_1_, int p_174976_2_) {
      if(Reflector.ForgeWorldProvider_getSkyRenderer.exists()) {
         WorldProvider worldprovider = this.field_72777_q.field_71441_e.t;
         Object object = Reflector.call(worldprovider, Reflector.ForgeWorldProvider_getSkyRenderer, new Object[0]);
         if(object != null) {
            ReflectorMethod reflectormethod = Reflector.IRenderHandler_render;
            Object[] aobject = new Object[OBFVAL_11.get()];
            aobject[0] = Float.valueOf(p_174976_1_);
            aobject[1] = this.field_72769_h;
            aobject[OBFVAL_4.get()] = this.field_72777_q;
            Reflector.callVoid(object, reflectormethod, aobject);
            return;
         }
      }

      if(this.field_72777_q.field_71441_e.t.func_177502_q() == 1) {
         this.func_180448_r();
      } else if(this.field_72777_q.field_71441_e.t.func_76569_d()) {
         GlStateManager.func_179090_x();
         boolean flag = Config.isShaders();
         if(flag) {
            Shaders.disableTexture2D();
         }

         Vec3 vec3 = this.field_72769_h.a(this.field_72777_q.func_175606_aa(), p_174976_1_);
         vec3 = CustomColors.getSkyColor(vec3, this.field_72777_q.field_71441_e, this.field_72777_q.func_175606_aa().field_70165_t, this.field_72777_q.func_175606_aa().field_70163_u + 1.0D, this.field_72777_q.func_175606_aa().field_70161_v);
         if(flag) {
            Shaders.setSkyColor(vec3);
         }

         float f = (float)vec3.field_72450_a;
         float f1 = (float)vec3.field_72448_b;
         float f2 = (float)vec3.field_72449_c;
         if(p_174976_2_ != OBFVAL_4.get()) {
            float f3 = (f * OBFVAL_56.get() + f1 * OBFVAL_57.get() + f2 * OBFVAL_58.get()) / OBFVAL_59.get();
            float f4 = (f * OBFVAL_56.get() + f1 * OBFVAL_60.get()) / OBFVAL_59.get();
            float f5 = (f * OBFVAL_56.get() + f2 * OBFVAL_60.get()) / OBFVAL_59.get();
            f = f3;
            f1 = f4;
            f2 = f5;
         }

         GlStateManager.func_179124_c(f, f1, f2);
         Tessellator tessellator = Tessellator.func_178181_a();
         WorldRenderer worldrenderer = tessellator.func_178180_c();
         GlStateManager.func_179132_a(false);
         GlStateManager.func_179127_m();
         if(flag) {
            Shaders.enableFog();
         }

         GlStateManager.func_179124_c(f, f1, f2);
         if(flag) {
            Shaders.preSkyList();
         }

         if(Config.isSkyEnabled()) {
            if(this.field_175005_X) {
               this.field_175012_t.func_177359_a();
               GL11.glEnableClientState(OBFVAL_44.get());
               GL11.glVertexPointer(OBFVAL_11.get(), OBFVAL_61.get(), OBFVAL_62.get(), 0L);
               this.field_175012_t.func_177358_a(OBFVAL_17.get());
               this.field_175012_t.func_177361_b();
               GL11.glDisableClientState(OBFVAL_44.get());
            } else {
               GlStateManager.func_179148_o(this.field_72771_w);
            }
         }

         GlStateManager.func_179106_n();
         if(flag) {
            Shaders.disableFog();
         }

         GlStateManager.func_179118_c();
         GlStateManager.func_179147_l();
         GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 1, 0);
         RenderHelper.func_74518_a();
         float[] afloat = this.field_72769_h.t.func_76560_a(this.field_72769_h.c(p_174976_1_), p_174976_1_);
         if(afloat != null && Config.isSunMoonEnabled()) {
            GlStateManager.func_179090_x();
            if(flag) {
               Shaders.disableTexture2D();
            }

            GlStateManager.func_179103_j(OBFVAL_63.get());
            GlStateManager.func_179094_E();
            GlStateManager.func_179114_b(OBFVAL_51.get(), 1.0F, 0.0F, 0.0F);
            GlStateManager.func_179114_b(MathHelper.func_76126_a(this.field_72769_h.d(p_174976_1_)) < 0.0F?OBFVAL_41.get():0.0F, 0.0F, 0.0F, 1.0F);
            GlStateManager.func_179114_b(OBFVAL_51.get(), 0.0F, 0.0F, 1.0F);
            float f6 = afloat[0];
            float f7 = afloat[1];
            float f8 = afloat[OBFVAL_4.get()];
            if(p_174976_2_ != OBFVAL_4.get()) {
               float f9 = (f6 * OBFVAL_56.get() + f7 * OBFVAL_57.get() + f8 * OBFVAL_58.get()) / OBFVAL_59.get();
               float f10 = (f6 * OBFVAL_56.get() + f7 * OBFVAL_60.get()) / OBFVAL_59.get();
               float f11 = (f6 * OBFVAL_56.get() + f8 * OBFVAL_60.get()) / OBFVAL_59.get();
               f6 = f9;
               f7 = f10;
               f8 = f11;
            }

            worldrenderer.func_181668_a(OBFVAL_40.get(), DefaultVertexFormats.field_181706_f);
            worldrenderer.func_181662_b(0.0D, OBFVAL_27.get(), 0.0D).func_181666_a(f6, f7, f8, afloat[OBFVAL_11.get()]).func_181675_d();
            boolean flag1 = true;

            for(int k = 0; k <= OBFVAL_31.get(); ++k) {
               float f18 = (float)k * OBFVAL_43.get() * OBFVAL_23.get() / OBFVAL_16.get();
               float f12 = MathHelper.func_76126_a(f18);
               float f13 = MathHelper.func_76134_b(f18);
               worldrenderer.func_181662_b((double)(f12 * OBFVAL_64.get()), (double)(f13 * OBFVAL_64.get()), (double)(-f13 * OBFVAL_65.get() * afloat[OBFVAL_11.get()])).func_181666_a(afloat[0], afloat[1], afloat[OBFVAL_4.get()], 0.0F).func_181675_d();
            }

            tessellator.func_78381_a();
            GlStateManager.func_179121_F();
            GlStateManager.func_179103_j(OBFVAL_66.get());
         }

         GlStateManager.func_179098_w();
         if(flag) {
            Shaders.enableTexture2D();
         }

         GlStateManager.func_179120_a(OBFVAL_12.get(), 1, 1, 0);
         GlStateManager.func_179094_E();
         float f15 = 1.0F - this.field_72769_h.j(p_174976_1_);
         GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, f15);
         GlStateManager.func_179114_b(OBFVAL_52.get(), 0.0F, 1.0F, 0.0F);
         CustomSky.renderSky(this.field_72769_h, this.field_72770_i, this.field_72769_h.c(p_174976_1_), f15);
         if(flag) {
            Shaders.preCelestialRotate();
         }

         GlStateManager.func_179114_b(this.field_72769_h.c(p_174976_1_) * OBFVAL_67.get(), 1.0F, 0.0F, 0.0F);
         if(flag) {
            Shaders.postCelestialRotate();
         }

         float f16 = OBFVAL_56.get();
         if(Config.isSunTexture()) {
            this.field_72770_i.func_110577_a(field_110928_i);
            worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181707_g);
            worldrenderer.func_181662_b((double)(-f16), OBFVAL_27.get(), (double)(-f16)).func_181673_a(0.0D, 0.0D).func_181675_d();
            worldrenderer.func_181662_b((double)f16, OBFVAL_27.get(), (double)(-f16)).func_181673_a(1.0D, 0.0D).func_181675_d();
            worldrenderer.func_181662_b((double)f16, OBFVAL_27.get(), (double)f16).func_181673_a(1.0D, 1.0D).func_181675_d();
            worldrenderer.func_181662_b((double)(-f16), OBFVAL_27.get(), (double)f16).func_181673_a(0.0D, 1.0D).func_181675_d();
            tessellator.func_78381_a();
         }

         f16 = OBFVAL_68.get();
         if(Config.isMoonTexture()) {
            this.field_72770_i.func_110577_a(field_110927_h);
            int i = this.field_72769_h.x();
            int j = i % OBFVAL_30.get();
            int l = i / OBFVAL_30.get() % OBFVAL_4.get();
            float f19 = (float)(j + 0) / OBFVAL_69.get();
            float f21 = (float)(l + 0) / OBFVAL_23.get();
            float f23 = (float)(j + 1) / OBFVAL_69.get();
            float f14 = (float)(l + 1) / OBFVAL_23.get();
            worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181707_g);
            worldrenderer.func_181662_b((double)(-f16), OBFVAL_53.get(), (double)f16).func_181673_a((double)f23, (double)f14).func_181675_d();
            worldrenderer.func_181662_b((double)f16, OBFVAL_53.get(), (double)f16).func_181673_a((double)f19, (double)f14).func_181675_d();
            worldrenderer.func_181662_b((double)f16, OBFVAL_53.get(), (double)(-f16)).func_181673_a((double)f19, (double)f21).func_181675_d();
            worldrenderer.func_181662_b((double)(-f16), OBFVAL_53.get(), (double)(-f16)).func_181673_a((double)f23, (double)f21).func_181675_d();
            tessellator.func_78381_a();
         }

         GlStateManager.func_179090_x();
         if(flag) {
            Shaders.disableTexture2D();
         }

         float f17 = this.field_72769_h.g(p_174976_1_) * f15;
         if(f17 > 0.0F && Config.isStarsEnabled() && !CustomSky.hasSkyLayers(this.field_72769_h)) {
            GlStateManager.func_179131_c(f17, f17, f17, f17);
            if(this.field_175005_X) {
               this.field_175013_s.func_177359_a();
               GL11.glEnableClientState(OBFVAL_44.get());
               GL11.glVertexPointer(OBFVAL_11.get(), OBFVAL_61.get(), OBFVAL_62.get(), 0L);
               this.field_175013_s.func_177358_a(OBFVAL_17.get());
               this.field_175013_s.func_177361_b();
               GL11.glDisableClientState(OBFVAL_44.get());
            } else {
               GlStateManager.func_179148_o(this.field_72772_v);
            }
         }

         GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
         GlStateManager.func_179084_k();
         GlStateManager.func_179141_d();
         GlStateManager.func_179127_m();
         if(flag) {
            Shaders.enableFog();
         }

         GlStateManager.func_179121_F();
         GlStateManager.func_179090_x();
         if(flag) {
            Shaders.disableTexture2D();
         }

         GlStateManager.func_179124_c(0.0F, 0.0F, 0.0F);
         double d0 = this.field_72777_q.field_71439_g.func_174824_e(p_174976_1_).field_72448_b - this.field_72769_h.X();
         if(d0 < 0.0D) {
            GlStateManager.func_179094_E();
            GlStateManager.func_179109_b(0.0F, OBFVAL_70.get(), 0.0F);
            if(this.field_175005_X) {
               this.field_175011_u.func_177359_a();
               GL11.glEnableClientState(OBFVAL_44.get());
               GL11.glVertexPointer(OBFVAL_11.get(), OBFVAL_61.get(), OBFVAL_62.get(), 0L);
               this.field_175011_u.func_177358_a(OBFVAL_17.get());
               this.field_175011_u.func_177361_b();
               GL11.glDisableClientState(OBFVAL_44.get());
            } else {
               GlStateManager.func_179148_o(this.field_72781_x);
            }

            GlStateManager.func_179121_F();
            float f20 = 1.0F;
            float f22 = -((float)(d0 + OBFVAL_71.get()));
            float f24 = OBFVAL_39.get();
            worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181706_f);
            worldrenderer.func_181662_b(OBFVAL_72.get(), (double)f22, 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, (double)f22, OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), (double)f22, OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, (double)f22, OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), (double)f22, OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), (double)f22, 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(OBFVAL_72.get(), OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), 1.0D).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            worldrenderer.func_181662_b(1.0D, OBFVAL_72.get(), OBFVAL_72.get()).func_181669_b(0, 0, 0, OBFVAL_55.get()).func_181675_d();
            tessellator.func_78381_a();
         }

         if(this.field_72769_h.t.func_76561_g()) {
            GlStateManager.func_179124_c(f * OBFVAL_73.get() + OBFVAL_74.get(), f1 * OBFVAL_73.get() + OBFVAL_74.get(), f2 * OBFVAL_75.get() + OBFVAL_25.get());
         } else {
            GlStateManager.func_179124_c(f, f1, f2);
         }

         if(this.field_72777_q.field_71474_y.field_151451_c <= OBFVAL_30.get()) {
            GlStateManager.func_179124_c(this.field_72777_q.field_71460_t.field_175080_Q, this.field_72777_q.field_71460_t.field_175082_R, this.field_72777_q.field_71460_t.field_175081_S);
         }

         GlStateManager.func_179094_E();
         GlStateManager.func_179109_b(0.0F, -((float)(d0 - OBFVAL_35.get())), 0.0F);
         if(Config.isSkyEnabled()) {
            GlStateManager.func_179148_o(this.field_72781_x);
         }

         GlStateManager.func_179121_F();
         GlStateManager.func_179098_w();
         if(flag) {
            Shaders.enableTexture2D();
         }

         GlStateManager.func_179132_a(true);
      }

   }

   public void func_180447_b(float p_180447_1_, int p_180447_2_) {
      if(!TexteriaOptions.disableClouds) {
         if(!Config.isCloudsOff()) {
            if(Reflector.ForgeWorldProvider_getCloudRenderer.exists()) {
               WorldProvider worldprovider = this.field_72777_q.field_71441_e.t;
               Object object = Reflector.call(worldprovider, Reflector.ForgeWorldProvider_getCloudRenderer, new Object[0]);
               if(object != null) {
                  ReflectorMethod reflectormethod = Reflector.IRenderHandler_render;
                  Object[] aobject = new Object[OBFVAL_11.get()];
                  aobject[0] = Float.valueOf(p_180447_1_);
                  aobject[1] = this.field_72769_h;
                  aobject[OBFVAL_4.get()] = this.field_72777_q;
                  Reflector.callVoid(object, reflectormethod, aobject);
                  return;
               }
            }

            if(this.field_72777_q.field_71441_e.t.func_76569_d()) {
               if(Config.isShaders()) {
                  Shaders.beginClouds();
               }

               if(Config.isCloudsFancy()) {
                  this.func_180445_c(p_180447_1_, p_180447_2_);
               } else {
                  this.cloudRenderer.prepareToRender(false, this.field_72773_u, p_180447_1_);
                  p_180447_1_ = 0.0F;
                  GlStateManager.func_179129_p();
                  float f9 = (float)(this.field_72777_q.func_175606_aa().field_70137_T + (this.field_72777_q.func_175606_aa().field_70163_u - this.field_72777_q.func_175606_aa().field_70137_T) * (double)p_180447_1_);
                  boolean flag1 = true;
                  boolean flag = true;
                  Tessellator tessellator = Tessellator.func_178181_a();
                  WorldRenderer worldrenderer = tessellator.func_178180_c();
                  this.field_72770_i.func_110577_a(field_110925_j);
                  GlStateManager.func_179147_l();
                  GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 1, 0);
                  if(this.cloudRenderer.shouldUpdateGlList()) {
                     this.cloudRenderer.startUpdateGlList();
                     Vec3 vec3 = this.field_72769_h.e(p_180447_1_);
                     float f = (float)vec3.field_72450_a;
                     float f1 = (float)vec3.field_72448_b;
                     float f2 = (float)vec3.field_72449_c;
                     if(p_180447_2_ != OBFVAL_4.get()) {
                        float f3 = (f * OBFVAL_56.get() + f1 * OBFVAL_57.get() + f2 * OBFVAL_58.get()) / OBFVAL_59.get();
                        float f4 = (f * OBFVAL_56.get() + f1 * OBFVAL_60.get()) / OBFVAL_59.get();
                        float f5 = (f * OBFVAL_56.get() + f2 * OBFVAL_60.get()) / OBFVAL_59.get();
                        f = f3;
                        f1 = f4;
                        f2 = f5;
                     }

                     float f10 = OBFVAL_76.get();
                     double d2 = (double)((float)this.field_72773_u + p_180447_1_);
                     double d0 = this.field_72777_q.func_175606_aa().field_70169_q + (this.field_72777_q.func_175606_aa().field_70165_t - this.field_72777_q.func_175606_aa().field_70169_q) * (double)p_180447_1_ + d2 * OBFVAL_77.get();
                     double d1 = this.field_72777_q.func_175606_aa().field_70166_s + (this.field_72777_q.func_175606_aa().field_70161_v - this.field_72777_q.func_175606_aa().field_70166_s) * (double)p_180447_1_;
                     int i = MathHelper.func_76128_c(d0 / OBFVAL_78.get());
                     int j = MathHelper.func_76128_c(d1 / OBFVAL_78.get());
                     d0 = d0 - (double)(i * OBFVAL_79.get());
                     d1 = d1 - (double)(j * OBFVAL_79.get());
                     float f6 = this.field_72769_h.t.func_76571_f() - f9 + OBFVAL_80.get();
                     f6 = f6 + this.field_72777_q.field_71474_y.ofCloudsHeight * OBFVAL_81.get();
                     float f7 = (float)(d0 * OBFVAL_82.get());
                     float f8 = (float)(d1 * OBFVAL_82.get());
                     worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181709_i);

                     for(int k = OBFVAL_83.get(); k < OBFVAL_38.get(); k += 32) {
                        for(int l = OBFVAL_83.get(); l < OBFVAL_38.get(); l += 32) {
                           worldrenderer.func_181662_b((double)(k + 0), (double)f6, (double)(l + OBFVAL_84.get())).func_181673_a((double)((float)(k + 0) * OBFVAL_76.get() + f7), (double)((float)(l + OBFVAL_84.get()) * OBFVAL_76.get() + f8)).func_181666_a(f, f1, f2, OBFVAL_85.get()).func_181675_d();
                           worldrenderer.func_181662_b((double)(k + OBFVAL_84.get()), (double)f6, (double)(l + OBFVAL_84.get())).func_181673_a((double)((float)(k + OBFVAL_84.get()) * OBFVAL_76.get() + f7), (double)((float)(l + OBFVAL_84.get()) * OBFVAL_76.get() + f8)).func_181666_a(f, f1, f2, OBFVAL_85.get()).func_181675_d();
                           worldrenderer.func_181662_b((double)(k + OBFVAL_84.get()), (double)f6, (double)(l + 0)).func_181673_a((double)((float)(k + OBFVAL_84.get()) * OBFVAL_76.get() + f7), (double)((float)(l + 0) * OBFVAL_76.get() + f8)).func_181666_a(f, f1, f2, OBFVAL_85.get()).func_181675_d();
                           worldrenderer.func_181662_b((double)(k + 0), (double)f6, (double)(l + 0)).func_181673_a((double)((float)(k + 0) * OBFVAL_76.get() + f7), (double)((float)(l + 0) * OBFVAL_76.get() + f8)).func_181666_a(f, f1, f2, OBFVAL_85.get()).func_181675_d();
                        }
                     }

                     tessellator.func_78381_a();
                     this.cloudRenderer.endUpdateGlList();
                  }

                  this.cloudRenderer.renderGlList();
                  GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
                  GlStateManager.func_179084_k();
                  GlStateManager.func_179089_o();
               }

               if(Config.isShaders()) {
                  Shaders.endClouds();
               }
            }
         }

      }
   }

   public boolean func_72721_a(double p_72721_1_, double p_72721_3_, double p_72721_5_, float p_72721_7_) {
      return false;
   }

   private void func_180445_c(float p_180445_1_, int p_180445_2_) {
      this.cloudRenderer.prepareToRender(true, this.field_72773_u, p_180445_1_);
      p_180445_1_ = 0.0F;
      GlStateManager.func_179129_p();
      float f = (float)(this.field_72777_q.func_175606_aa().field_70137_T + (this.field_72777_q.func_175606_aa().field_70163_u - this.field_72777_q.func_175606_aa().field_70137_T) * (double)p_180445_1_);
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      float f1 = OBFVAL_70.get();
      float f2 = OBFVAL_69.get();
      double d0 = (double)((float)this.field_72773_u + p_180445_1_);
      double d1 = (this.field_72777_q.func_175606_aa().field_70169_q + (this.field_72777_q.func_175606_aa().field_70165_t - this.field_72777_q.func_175606_aa().field_70169_q) * (double)p_180445_1_ + d0 * OBFVAL_77.get()) / OBFVAL_86.get();
      double d2 = (this.field_72777_q.func_175606_aa().field_70166_s + (this.field_72777_q.func_175606_aa().field_70161_v - this.field_72777_q.func_175606_aa().field_70166_s) * (double)p_180445_1_) / OBFVAL_86.get() + OBFVAL_87.get();
      float f3 = this.field_72769_h.t.func_76571_f() - f + OBFVAL_80.get();
      f3 = f3 + this.field_72777_q.field_71474_y.ofCloudsHeight * OBFVAL_81.get();
      int i = MathHelper.func_76128_c(d1 / OBFVAL_78.get());
      int j = MathHelper.func_76128_c(d2 / OBFVAL_78.get());
      d1 = d1 - (double)(i * OBFVAL_79.get());
      d2 = d2 - (double)(j * OBFVAL_79.get());
      this.field_72770_i.func_110577_a(field_110925_j);
      GlStateManager.func_179147_l();
      GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 1, 0);
      Vec3 vec3 = this.field_72769_h.e(p_180445_1_);
      float f4 = (float)vec3.field_72450_a;
      float f5 = (float)vec3.field_72448_b;
      float f6 = (float)vec3.field_72449_c;
      if(p_180445_2_ != OBFVAL_4.get()) {
         float f7 = (f4 * OBFVAL_56.get() + f5 * OBFVAL_57.get() + f6 * OBFVAL_58.get()) / OBFVAL_59.get();
         float f8 = (f4 * OBFVAL_56.get() + f5 * OBFVAL_60.get()) / OBFVAL_59.get();
         float f9 = (f4 * OBFVAL_56.get() + f6 * OBFVAL_60.get()) / OBFVAL_59.get();
         f4 = f7;
         f5 = f8;
         f6 = f9;
      }

      float f26 = f4 * OBFVAL_88.get();
      float f27 = f5 * OBFVAL_88.get();
      float f28 = f6 * OBFVAL_88.get();
      float f10 = f4 * OBFVAL_89.get();
      float f11 = f5 * OBFVAL_89.get();
      float f12 = f6 * OBFVAL_89.get();
      float f13 = f4 * OBFVAL_85.get();
      float f14 = f5 * OBFVAL_85.get();
      float f15 = f6 * OBFVAL_85.get();
      float f16 = OBFVAL_90.get();
      float f17 = (float)MathHelper.func_76128_c(d1) * OBFVAL_90.get();
      float f18 = (float)MathHelper.func_76128_c(d2) * OBFVAL_90.get();
      float f19 = (float)(d1 - (double)MathHelper.func_76128_c(d1));
      float f20 = (float)(d2 - (double)MathHelper.func_76128_c(d2));
      boolean flag = true;
      boolean flag1 = true;
      float f21 = OBFVAL_91.get();
      GlStateManager.func_179152_a(OBFVAL_70.get(), 1.0F, OBFVAL_70.get());

      for(int k = 0; k < OBFVAL_4.get(); ++k) {
         if(k == 0) {
            GlStateManager.func_179135_a(false, false, false, false);
         } else {
            switch(p_180445_2_) {
            case 0:
               GlStateManager.func_179135_a(false, true, true, true);
               break;
            case 1:
               GlStateManager.func_179135_a(true, false, false, true);
               break;
            case 2:
               GlStateManager.func_179135_a(true, true, true, true);
            }
         }

         this.cloudRenderer.renderGlList();
      }

      if(this.cloudRenderer.shouldUpdateGlList()) {
         this.cloudRenderer.startUpdateGlList();

         for(int j1 = OBFVAL_92.get(); j1 <= OBFVAL_30.get(); ++j1) {
            for(int l = OBFVAL_92.get(); l <= OBFVAL_30.get(); ++l) {
               worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181712_l);
               float f22 = (float)(j1 * OBFVAL_5.get());
               float f23 = (float)(l * OBFVAL_5.get());
               float f24 = f22 - f19;
               float f25 = f23 - f20;
               if(f3 > OBFVAL_93.get()) {
                  worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f10, f11, f12, OBFVAL_85.get()).func_181663_c(0.0F, OBFVAL_39.get(), 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + 0.0F), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f10, f11, f12, OBFVAL_85.get()).func_181663_c(0.0F, OBFVAL_39.get(), 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f10, f11, f12, OBFVAL_85.get()).func_181663_c(0.0F, OBFVAL_39.get(), 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f10, f11, f12, OBFVAL_85.get()).func_181663_c(0.0F, OBFVAL_39.get(), 0.0F).func_181675_d();
               }

               if(f3 <= OBFVAL_95.get()) {
                  worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + OBFVAL_69.get() - OBFVAL_91.get()), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f4, f5, f6, OBFVAL_85.get()).func_181663_c(0.0F, 1.0F, 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + OBFVAL_69.get() - OBFVAL_91.get()), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f4, f5, f6, OBFVAL_85.get()).func_181663_c(0.0F, 1.0F, 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + OBFVAL_69.get() - OBFVAL_91.get()), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f4, f5, f6, OBFVAL_85.get()).func_181663_c(0.0F, 1.0F, 0.0F).func_181675_d();
                  worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + OBFVAL_69.get() - OBFVAL_91.get()), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f4, f5, f6, OBFVAL_85.get()).func_181663_c(0.0F, 1.0F, 0.0F).func_181675_d();
               }

               if(j1 > -1) {
                  for(int i1 = 0; i1 < OBFVAL_5.get(); ++i1) {
                     worldrenderer.func_181662_b((double)(f24 + (float)i1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + (float)i1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(OBFVAL_39.get(), 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)i1 + 0.0F), (double)(f3 + OBFVAL_69.get()), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + (float)i1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(OBFVAL_39.get(), 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)i1 + 0.0F), (double)(f3 + OBFVAL_69.get()), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)i1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(OBFVAL_39.get(), 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)i1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)i1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(OBFVAL_39.get(), 0.0F, 0.0F).func_181675_d();
                  }
               }

               if(j1 <= 1) {
                  for(int k1 = 0; k1 < OBFVAL_5.get(); ++k1) {
                     worldrenderer.func_181662_b((double)(f24 + (float)k1 + 1.0F - OBFVAL_91.get()), (double)(f3 + 0.0F), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + (float)k1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(1.0F, 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)k1 + 1.0F - OBFVAL_91.get()), (double)(f3 + OBFVAL_69.get()), (double)(f25 + OBFVAL_94.get())).func_181673_a((double)((f22 + (float)k1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + OBFVAL_94.get()) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(1.0F, 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)k1 + 1.0F - OBFVAL_91.get()), (double)(f3 + OBFVAL_69.get()), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)k1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(1.0F, 0.0F, 0.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + (float)k1 + 1.0F - OBFVAL_91.get()), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)k1 + OBFVAL_96.get()) * OBFVAL_90.get() + f17), (double)((f23 + 0.0F) * OBFVAL_90.get() + f18)).func_181666_a(f26, f27, f28, OBFVAL_85.get()).func_181663_c(1.0F, 0.0F, 0.0F).func_181675_d();
                  }
               }

               if(l > -1) {
                  for(int l1 = 0; l1 < OBFVAL_5.get(); ++l1) {
                     worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + OBFVAL_69.get()), (double)(f25 + (float)l1 + 0.0F)).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + (float)l1 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, OBFVAL_39.get()).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + OBFVAL_69.get()), (double)(f25 + (float)l1 + 0.0F)).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + (float)l1 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, OBFVAL_39.get()).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + 0.0F), (double)(f25 + (float)l1 + 0.0F)).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + (float)l1 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, OBFVAL_39.get()).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + (float)l1 + 0.0F)).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + (float)l1 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, OBFVAL_39.get()).func_181675_d();
                  }
               }

               if(l <= 1) {
                  for(int i2 = 0; i2 < OBFVAL_5.get(); ++i2) {
                     worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + OBFVAL_69.get()), (double)(f25 + (float)i2 + 1.0F - OBFVAL_91.get())).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + (float)i2 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, 1.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + OBFVAL_69.get()), (double)(f25 + (float)i2 + 1.0F - OBFVAL_91.get())).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + (float)i2 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, 1.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + OBFVAL_94.get()), (double)(f3 + 0.0F), (double)(f25 + (float)i2 + 1.0F - OBFVAL_91.get())).func_181673_a((double)((f22 + OBFVAL_94.get()) * OBFVAL_90.get() + f17), (double)((f23 + (float)i2 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, 1.0F).func_181675_d();
                     worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + (float)i2 + 1.0F - OBFVAL_91.get())).func_181673_a((double)((f22 + 0.0F) * OBFVAL_90.get() + f17), (double)((f23 + (float)i2 + OBFVAL_96.get()) * OBFVAL_90.get() + f18)).func_181666_a(f13, f14, f15, OBFVAL_85.get()).func_181663_c(0.0F, 0.0F, 1.0F).func_181675_d();
                  }
               }

               tessellator.func_78381_a();
            }
         }

         this.cloudRenderer.endUpdateGlList();
      }

      GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
      GlStateManager.func_179084_k();
      GlStateManager.func_179089_o();
   }

   public void func_174967_a(long p_174967_1_) {
      p_174967_1_ = (long)((double)p_174967_1_ + OBFVAL_97.get());
      this.field_147595_R |= this.field_174995_M.func_178516_a(p_174967_1_);
      if(this.chunksToUpdateForced.size() > 0) {
         Iterator iterator = this.chunksToUpdateForced.iterator();

         while(iterator.hasNext()) {
            RenderChunk renderchunk = (RenderChunk)iterator.next();
            if(!this.field_174995_M.func_178507_a(renderchunk)) {
               break;
            }

            renderchunk.func_178575_a(false);
            iterator.remove();
            this.field_175009_l.remove(renderchunk);
            this.chunksToResortTransparency.remove(renderchunk);
         }
      }

      if(this.chunksToResortTransparency.size() > 0) {
         Iterator iterator2 = this.chunksToResortTransparency.iterator();
         if(iterator2.hasNext()) {
            RenderChunk renderchunk2 = (RenderChunk)iterator2.next();
            if(this.field_174995_M.func_178509_c(renderchunk2)) {
               iterator2.remove();
            }
         }
      }

      int j = 0;
      int k = Config.getUpdatesPerFrame();
      int i = k * OBFVAL_4.get();
      Iterator iterator1 = this.field_175009_l.iterator();

      while(iterator1.hasNext()) {
         RenderChunk renderchunk1 = (RenderChunk)iterator1.next();
         if(!this.field_174995_M.func_178507_a(renderchunk1)) {
            break;
         }

         renderchunk1.func_178575_a(false);
         iterator1.remove();
         if(renderchunk1.func_178571_g().func_178489_a() && k < i) {
            ++k;
         }

         ++j;
         if(j >= k) {
            break;
         }
      }

   }

   public void func_180449_a(Entity p_180449_1_, float p_180449_2_) {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      WorldBorder worldborder = this.field_72769_h.af();
      double d0 = (double)(this.field_72777_q.field_71474_y.field_151451_c * OBFVAL_31.get());
      if(p_180449_1_.field_70165_t >= worldborder.func_177728_d() - d0 || p_180449_1_.field_70165_t <= worldborder.func_177726_b() + d0 || p_180449_1_.field_70161_v >= worldborder.func_177733_e() - d0 || p_180449_1_.field_70161_v <= worldborder.func_177736_c() + d0) {
         double d1 = 1.0D - worldborder.func_177745_a(p_180449_1_) / d0;
         d1 = Math.pow(d1, OBFVAL_98.get());
         double d2 = p_180449_1_.field_70142_S + (p_180449_1_.field_70165_t - p_180449_1_.field_70142_S) * (double)p_180449_2_;
         double d3 = p_180449_1_.field_70137_T + (p_180449_1_.field_70163_u - p_180449_1_.field_70137_T) * (double)p_180449_2_;
         double d4 = p_180449_1_.field_70136_U + (p_180449_1_.field_70161_v - p_180449_1_.field_70136_U) * (double)p_180449_2_;
         GlStateManager.func_179147_l();
         GlStateManager.func_179120_a(OBFVAL_12.get(), 1, 1, 0);
         this.field_72770_i.func_110577_a(field_175006_g);
         GlStateManager.func_179132_a(false);
         GlStateManager.func_179094_E();
         int i = worldborder.func_177734_a().func_177766_a();
         float f = (float)(i >> OBFVAL_31.get() & OBFVAL_55.get()) / OBFVAL_99.get();
         float f1 = (float)(i >> OBFVAL_5.get() & OBFVAL_55.get()) / OBFVAL_99.get();
         float f2 = (float)(i & OBFVAL_55.get()) / OBFVAL_99.get();
         GlStateManager.func_179131_c(f, f1, f2, (float)d1);
         GlStateManager.func_179136_a(OBFVAL_100.get(), OBFVAL_100.get());
         GlStateManager.func_179088_q();
         GlStateManager.func_179092_a(OBFVAL_101.get(), OBFVAL_25.get());
         GlStateManager.func_179141_d();
         GlStateManager.func_179129_p();
         float f3 = (float)(Minecraft.func_71386_F() % OBFVAL_102.get()) / OBFVAL_103.get();
         float f4 = 0.0F;
         float f5 = 0.0F;
         float f6 = OBFVAL_81.get();
         worldrenderer.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_181707_g);
         worldrenderer.func_178969_c(-d2, -d3, -d4);
         double d5 = Math.max((double)MathHelper.func_76128_c(d4 - d0), worldborder.func_177736_c());
         double d6 = Math.min((double)MathHelper.func_76143_f(d4 + d0), worldborder.func_177733_e());
         if(d2 > worldborder.func_177728_d() - d0) {
            float f7 = 0.0F;

            for(double d7 = d5; d7 < d6; f7 += OBFVAL_96.get()) {
               double d8 = Math.min(1.0D, d6 - d7);
               float f8 = (float)d8 * OBFVAL_96.get();
               worldrenderer.func_181662_b(worldborder.func_177728_d(), OBFVAL_32.get(), d7).func_181673_a((double)(f3 + f7), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177728_d(), OBFVAL_32.get(), d7 + d8).func_181673_a((double)(f3 + f8 + f7), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177728_d(), 0.0D, d7 + d8).func_181673_a((double)(f3 + f8 + f7), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177728_d(), 0.0D, d7).func_181673_a((double)(f3 + f7), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               ++d7;
            }
         }

         if(d2 < worldborder.func_177726_b() + d0) {
            float f9 = 0.0F;

            for(double d9 = d5; d9 < d6; f9 += OBFVAL_96.get()) {
               double d12 = Math.min(1.0D, d6 - d9);
               float f12 = (float)d12 * OBFVAL_96.get();
               worldrenderer.func_181662_b(worldborder.func_177726_b(), OBFVAL_32.get(), d9).func_181673_a((double)(f3 + f9), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177726_b(), OBFVAL_32.get(), d9 + d12).func_181673_a((double)(f3 + f12 + f9), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177726_b(), 0.0D, d9 + d12).func_181673_a((double)(f3 + f12 + f9), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               worldrenderer.func_181662_b(worldborder.func_177726_b(), 0.0D, d9).func_181673_a((double)(f3 + f9), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               ++d9;
            }
         }

         d5 = Math.max((double)MathHelper.func_76128_c(d2 - d0), worldborder.func_177726_b());
         d6 = Math.min((double)MathHelper.func_76143_f(d2 + d0), worldborder.func_177728_d());
         if(d4 > worldborder.func_177733_e() - d0) {
            float f10 = 0.0F;

            for(double d10 = d5; d10 < d6; f10 += OBFVAL_96.get()) {
               double d13 = Math.min(1.0D, d6 - d10);
               float f13 = (float)d13 * OBFVAL_96.get();
               worldrenderer.func_181662_b(d10, OBFVAL_32.get(), worldborder.func_177733_e()).func_181673_a((double)(f3 + f10), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(d10 + d13, OBFVAL_32.get(), worldborder.func_177733_e()).func_181673_a((double)(f3 + f13 + f10), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(d10 + d13, 0.0D, worldborder.func_177733_e()).func_181673_a((double)(f3 + f13 + f10), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               worldrenderer.func_181662_b(d10, 0.0D, worldborder.func_177733_e()).func_181673_a((double)(f3 + f10), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               ++d10;
            }
         }

         if(d4 < worldborder.func_177736_c() + d0) {
            float f11 = 0.0F;

            for(double d11 = d5; d11 < d6; f11 += OBFVAL_96.get()) {
               double d14 = Math.min(1.0D, d6 - d11);
               float f14 = (float)d14 * OBFVAL_96.get();
               worldrenderer.func_181662_b(d11, OBFVAL_32.get(), worldborder.func_177736_c()).func_181673_a((double)(f3 + f11), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(d11 + d14, OBFVAL_32.get(), worldborder.func_177736_c()).func_181673_a((double)(f3 + f14 + f11), (double)(f3 + 0.0F)).func_181675_d();
               worldrenderer.func_181662_b(d11 + d14, 0.0D, worldborder.func_177736_c()).func_181673_a((double)(f3 + f14 + f11), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               worldrenderer.func_181662_b(d11, 0.0D, worldborder.func_177736_c()).func_181673_a((double)(f3 + f11), (double)(f3 + OBFVAL_81.get())).func_181675_d();
               ++d11;
            }
         }

         tessellator.func_78381_a();
         worldrenderer.func_178969_c(0.0D, 0.0D, 0.0D);
         GlStateManager.func_179089_o();
         GlStateManager.func_179118_c();
         GlStateManager.func_179136_a(0.0F, 0.0F);
         GlStateManager.func_179113_r();
         GlStateManager.func_179141_d();
         GlStateManager.func_179084_k();
         GlStateManager.func_179121_F();
         GlStateManager.func_179132_a(true);
      }

   }

   private void func_180443_s() {
      GlStateManager.func_179120_a(OBFVAL_104.get(), OBFVAL_105.get(), 1, 0);
      GlStateManager.func_179147_l();
      GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, OBFVAL_96.get());
      GlStateManager.func_179136_a(OBFVAL_100.get(), OBFVAL_100.get());
      GlStateManager.func_179088_q();
      GlStateManager.func_179092_a(OBFVAL_101.get(), OBFVAL_25.get());
      GlStateManager.func_179141_d();
      GlStateManager.func_179094_E();
      if(Config.isShaders()) {
         ShadersRender.beginBlockDamage();
      }

   }

   private void func_174969_t() {
      GlStateManager.func_179118_c();
      GlStateManager.func_179136_a(0.0F, 0.0F);
      GlStateManager.func_179113_r();
      GlStateManager.func_179141_d();
      GlStateManager.func_179132_a(true);
      GlStateManager.func_179121_F();
      if(Config.isShaders()) {
         ShadersRender.endBlockDamage();
      }

   }

   public void func_174981_a(Tessellator p_174981_1_, WorldRenderer p_174981_2_, Entity p_174981_3_, float p_174981_4_) {
      double d0 = p_174981_3_.field_70142_S + (p_174981_3_.field_70165_t - p_174981_3_.field_70142_S) * (double)p_174981_4_;
      double d1 = p_174981_3_.field_70137_T + (p_174981_3_.field_70163_u - p_174981_3_.field_70137_T) * (double)p_174981_4_;
      double d2 = p_174981_3_.field_70136_U + (p_174981_3_.field_70161_v - p_174981_3_.field_70136_U) * (double)p_174981_4_;
      if(!this.field_72738_E.isEmpty()) {
         this.field_72770_i.func_110577_a(TextureMap.field_110575_b);
         this.func_180443_s();
         p_174981_2_.func_181668_a(OBFVAL_17.get(), DefaultVertexFormats.field_176600_a);
         p_174981_2_.func_178969_c(-d0, -d1, -d2);
         p_174981_2_.func_78914_f();
         Iterator iterator = this.field_72738_E.values().iterator();

         while(iterator.hasNext()) {
            DestroyBlockProgress destroyblockprogress = (DestroyBlockProgress)iterator.next();
            BlockPos blockpos = destroyblockprogress.func_180246_b();
            double d3 = (double)blockpos.n() - d0;
            double d4 = (double)blockpos.o() - d1;
            double d5 = (double)blockpos.p() - d2;
            Block block = this.field_72769_h.p(blockpos).func_177230_c();
            boolean flag;
            if(Reflector.ForgeTileEntity_canRenderBreaking.exists()) {
               boolean flag1 = block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull;
               if(!flag1) {
                  TileEntity tileentity = this.field_72769_h.s(blockpos);
                  if(tileentity != null) {
                     flag1 = Reflector.callBoolean(tileentity, Reflector.ForgeTileEntity_canRenderBreaking, new Object[0]);
                  }
               }

               flag = !flag1;
            } else {
               flag = !(block instanceof BlockChest) && !(block instanceof BlockEnderChest) && !(block instanceof BlockSign) && !(block instanceof BlockSkull);
            }

            if(flag) {
               if(d3 * d3 + d4 * d4 + d5 * d5 > OBFVAL_106.get()) {
                  iterator.remove();
               } else {
                  IBlockState iblockstate = this.field_72769_h.p(blockpos);
                  if(iblockstate.func_177230_c().func_149688_o() != Material.field_151579_a) {
                     int i = destroyblockprogress.func_73106_e();
                     TextureAtlasSprite textureatlassprite = this.field_94141_F[i];
                     BlockRendererDispatcher blockrendererdispatcher = this.field_72777_q.func_175602_ab();
                     blockrendererdispatcher.func_175020_a(iblockstate, blockpos, textureatlassprite, this.field_72769_h);
                  }
               }
            }
         }

         p_174981_1_.func_78381_a();
         p_174981_2_.func_178969_c(0.0D, 0.0D, 0.0D);
         this.func_174969_t();
      }

   }

   public void func_72731_b(EntityPlayer p_72731_1_, MovingObjectPosition p_72731_2_, int p_72731_3_, float p_72731_4_) {
      if(p_72731_3_ == 0 && p_72731_2_.field_72313_a == MovingObjectType.BLOCK) {
         GlStateManager.func_179147_l();
         GlStateManager.func_179120_a(OBFVAL_12.get(), OBFVAL_13.get(), 1, 0);
         GlStateManager.func_179131_c(0.0F, 0.0F, 0.0F, OBFVAL_107.get());
         GL11.glLineWidth(OBFVAL_23.get());
         GlStateManager.func_179090_x();
         if(Config.isShaders()) {
            Shaders.disableTexture2D();
         }

         GlStateManager.func_179132_a(false);
         float f = OBFVAL_108.get();
         BlockPos blockpos = p_72731_2_.func_178782_a();
         Block block = this.field_72769_h.p(blockpos).func_177230_c();
         if(block.func_149688_o() != Material.field_151579_a && this.field_72769_h.af().func_177746_a(blockpos)) {
            block.func_180654_a(this.field_72769_h, blockpos);
            double d0 = p_72731_1_.field_70142_S + (p_72731_1_.field_70165_t - p_72731_1_.field_70142_S) * (double)p_72731_4_;
            double d1 = p_72731_1_.field_70137_T + (p_72731_1_.field_70163_u - p_72731_1_.field_70137_T) * (double)p_72731_4_;
            double d2 = p_72731_1_.field_70136_U + (p_72731_1_.field_70161_v - p_72731_1_.field_70136_U) * (double)p_72731_4_;
            func_181561_a(block.func_180646_a(this.field_72769_h, blockpos).func_72314_b(OBFVAL_109.get(), OBFVAL_109.get(), OBFVAL_109.get()).func_72317_d(-d0, -d1, -d2));
         }

         GlStateManager.func_179132_a(true);
         GlStateManager.func_179098_w();
         if(Config.isShaders()) {
            Shaders.enableTexture2D();
         }

         GlStateManager.func_179084_k();
      }

   }

   public static void func_181561_a(AxisAlignedBB p_181561_0_) {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      worldrenderer.func_181668_a(OBFVAL_11.get(), DefaultVertexFormats.field_181705_e);
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72338_b, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72338_b, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72338_b, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72338_b, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72338_b, p_181561_0_.field_72339_c).func_181675_d();
      tessellator.func_78381_a();
      worldrenderer.func_181668_a(OBFVAL_11.get(), DefaultVertexFormats.field_181705_e);
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72337_e, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72337_e, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72337_e, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72337_e, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72337_e, p_181561_0_.field_72339_c).func_181675_d();
      tessellator.func_78381_a();
      worldrenderer.func_181668_a(1, DefaultVertexFormats.field_181705_e);
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72338_b, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72337_e, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72338_b, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72337_e, p_181561_0_.field_72339_c).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72338_b, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72336_d, p_181561_0_.field_72337_e, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72338_b, p_181561_0_.field_72334_f).func_181675_d();
      worldrenderer.func_181662_b(p_181561_0_.field_72340_a, p_181561_0_.field_72337_e, p_181561_0_.field_72334_f).func_181675_d();
      tessellator.func_78381_a();
   }

   public static void func_181563_a(AxisAlignedBB p_181563_0_, int p_181563_1_, int p_181563_2_, int p_181563_3_, int p_181563_4_) {
      Tessellator tessellator = Tessellator.func_178181_a();
      WorldRenderer worldrenderer = tessellator.func_178180_c();
      worldrenderer.func_181668_a(OBFVAL_11.get(), DefaultVertexFormats.field_181706_f);
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72338_b, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72338_b, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72338_b, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72338_b, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72338_b, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      tessellator.func_78381_a();
      worldrenderer.func_181668_a(OBFVAL_11.get(), DefaultVertexFormats.field_181706_f);
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72337_e, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72337_e, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72337_e, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72337_e, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72337_e, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      tessellator.func_78381_a();
      worldrenderer.func_181668_a(1, DefaultVertexFormats.field_181706_f);
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72338_b, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72337_e, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72338_b, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72337_e, p_181563_0_.field_72339_c).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72338_b, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72336_d, p_181563_0_.field_72337_e, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72338_b, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      worldrenderer.func_181662_b(p_181563_0_.field_72340_a, p_181563_0_.field_72337_e, p_181563_0_.field_72334_f).func_181669_b(p_181563_1_, p_181563_2_, p_181563_3_, p_181563_4_).func_181675_d();
      tessellator.func_78381_a();
   }

   private void func_72725_b(int p_72725_1_, int p_72725_2_, int p_72725_3_, int p_72725_4_, int p_72725_5_, int p_72725_6_) {
      this.field_175008_n.func_178162_a(p_72725_1_, p_72725_2_, p_72725_3_, p_72725_4_, p_72725_5_, p_72725_6_);
   }

   public void func_174960_a(BlockPos p_174960_1_) {
      int i = p_174960_1_.n();
      int j = p_174960_1_.o();
      int k = p_174960_1_.p();
      this.func_72725_b(i - 1, j - 1, k - 1, i + 1, j + 1, k + 1);
   }

   public void func_174959_b(BlockPos p_174959_1_) {
      int i = p_174959_1_.n();
      int j = p_174959_1_.o();
      int k = p_174959_1_.p();
      this.func_72725_b(i - 1, j - 1, k - 1, i + 1, j + 1, k + 1);
   }

   public void func_147585_a(int p_147585_1_, int p_147585_2_, int p_147585_3_, int p_147585_4_, int p_147585_5_, int p_147585_6_) {
      this.func_72725_b(p_147585_1_ - 1, p_147585_2_ - 1, p_147585_3_ - 1, p_147585_4_ + 1, p_147585_5_ + 1, p_147585_6_ + 1);
   }

   public void func_174961_a(String p_174961_1_, BlockPos p_174961_2_) {
      ISound isound = (ISound)this.field_147593_P.get(p_174961_2_);
      if(isound != null) {
         this.field_72777_q.func_147118_V().func_147683_b(isound);
         this.field_147593_P.remove(p_174961_2_);
      }

      if(p_174961_1_ != null) {
         ItemRecord itemrecord = ItemRecord.func_150926_b(p_174961_1_);
         if(itemrecord != null) {
            this.field_72777_q.field_71456_v.func_73833_a(itemrecord.func_150927_i());
         }

         ResourceLocation resourcelocation = null;
         if(Reflector.ForgeItemRecord_getRecordResource.exists() && itemrecord != null) {
            resourcelocation = (ResourceLocation)Reflector.call(itemrecord, Reflector.ForgeItemRecord_getRecordResource, new Object[]{p_174961_1_});
         }

         if(resourcelocation == null) {
            resourcelocation = new ResourceLocation(p_174961_1_);
         }

         PositionedSoundRecord positionedsoundrecord = PositionedSoundRecord.func_147675_a(resourcelocation, (float)p_174961_2_.n(), (float)p_174961_2_.o(), (float)p_174961_2_.p());
         this.field_147593_P.put(p_174961_2_, positionedsoundrecord);
         this.field_72777_q.func_147118_V().func_147682_a(positionedsoundrecord);
      }

   }

   public void func_72704_a(String p_72704_1_, double p_72704_2_, double p_72704_4_, double p_72704_6_, float p_72704_8_, float p_72704_9_) {
   }

   public void func_85102_a(EntityPlayer p_85102_1_, String p_85102_2_, double p_85102_3_, double p_85102_5_, double p_85102_7_, float p_85102_9_, float p_85102_10_) {
   }

   public void func_180442_a(int p_180442_1_, boolean p_180442_2_, final double p_180442_3_, final double p_180442_5_, final double p_180442_7_, double p_180442_9_, double p_180442_11_, double p_180442_13_, int... p_180442_15_) {
      try {
         this.func_174974_b(p_180442_1_, p_180442_2_, p_180442_3_, p_180442_5_, p_180442_7_, p_180442_9_, p_180442_11_, p_180442_13_, p_180442_15_);
      } catch (Throwable throwable) {
         CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception while adding particle");
         CrashReportCategory crashreportcategory = crashreport.func_85058_a("Particle being added");
         crashreportcategory.func_71507_a("ID", Integer.valueOf(p_180442_1_));
         if(p_180442_15_ != null) {
            crashreportcategory.func_71507_a("Parameters", p_180442_15_);
         }

         crashreportcategory.func_71500_a("Position", new Callable() {
            private static final String __OBFID = "CL_00000955";

            public String call() throws Exception {
               return CrashReportCategory.func_85074_a(p_180442_3_, p_180442_5_, p_180442_7_);
            }
         });
         throw new ReportedException(crashreport);
      }
   }

   private void func_174972_a(EnumParticleTypes p_174972_1_, double p_174972_2_, double p_174972_4_, double p_174972_6_, double p_174972_8_, double p_174972_10_, double p_174972_12_, int... p_174972_14_) {
      this.func_180442_a(p_174972_1_.func_179348_c(), p_174972_1_.func_179344_e(), p_174972_2_, p_174972_4_, p_174972_6_, p_174972_8_, p_174972_10_, p_174972_12_, p_174972_14_);
   }

   private EntityFX func_174974_b(int p_174974_1_, boolean p_174974_2_, double p_174974_3_, double p_174974_5_, double p_174974_7_, double p_174974_9_, double p_174974_11_, double p_174974_13_, int... p_174974_15_) {
      if(this.field_72777_q != null && this.field_72777_q.func_175606_aa() != null && this.field_72777_q.field_71452_i != null) {
         int i = this.field_72777_q.field_71474_y.field_74362_aa;
         if(i == 1 && this.field_72769_h.s.nextInt(OBFVAL_11.get()) == 0) {
            i = OBFVAL_4.get();
         }

         double d0 = this.field_72777_q.func_175606_aa().field_70165_t - p_174974_3_;
         double d1 = this.field_72777_q.func_175606_aa().field_70163_u - p_174974_5_;
         double d2 = this.field_72777_q.func_175606_aa().field_70161_v - p_174974_7_;
         if(p_174974_1_ == EnumParticleTypes.EXPLOSION_HUGE.func_179348_c() && !Config.isAnimatedExplosion()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.EXPLOSION_LARGE.func_179348_c() && !Config.isAnimatedExplosion()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.EXPLOSION_NORMAL.func_179348_c() && !Config.isAnimatedExplosion()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SUSPENDED.func_179348_c() && !Config.isWaterParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SUSPENDED_DEPTH.func_179348_c() && !Config.isVoidParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SMOKE_NORMAL.func_179348_c() && !Config.isAnimatedSmoke()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SMOKE_LARGE.func_179348_c() && !Config.isAnimatedSmoke()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SPELL_MOB.func_179348_c() && !Config.isPotionParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SPELL_MOB_AMBIENT.func_179348_c() && !Config.isPotionParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SPELL.func_179348_c() && !Config.isPotionParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SPELL_INSTANT.func_179348_c() && !Config.isPotionParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.SPELL_WITCH.func_179348_c() && !Config.isPotionParticles()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.PORTAL.func_179348_c() && !Config.isAnimatedPortal()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.FLAME.func_179348_c() && !Config.isAnimatedFlame()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.REDSTONE.func_179348_c() && !Config.isAnimatedRedstone()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.DRIP_WATER.func_179348_c() && !Config.isDrippingWaterLava()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.DRIP_LAVA.func_179348_c() && !Config.isDrippingWaterLava()) {
            return null;
         } else if(p_174974_1_ == EnumParticleTypes.FIREWORKS_SPARK.func_179348_c() && !Config.isFireworkParticles()) {
            return null;
         } else if(p_174974_2_) {
            return this.field_72777_q.field_71452_i.func_178927_a(p_174974_1_, p_174974_3_, p_174974_5_, p_174974_7_, p_174974_9_, p_174974_11_, p_174974_13_, p_174974_15_);
         } else {
            double d3 = OBFVAL_35.get();
            double d4 = OBFVAL_32.get();
            if(p_174974_1_ == EnumParticleTypes.CRIT.func_179348_c()) {
               d4 = OBFVAL_110.get();
            }

            if(d0 * d0 + d1 * d1 + d2 * d2 > d4) {
               return null;
            } else if(i > 1) {
               return null;
            } else {
               EntityFX entityfx = this.field_72777_q.field_71452_i.func_178927_a(p_174974_1_, p_174974_3_, p_174974_5_, p_174974_7_, p_174974_9_, p_174974_11_, p_174974_13_, p_174974_15_);
               if(p_174974_1_ == EnumParticleTypes.WATER_BUBBLE.func_179348_c()) {
                  CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_);
               }

               if(p_174974_1_ == EnumParticleTypes.WATER_SPLASH.func_179348_c()) {
                  CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_);
               }

               if(p_174974_1_ == EnumParticleTypes.WATER_DROP.func_179348_c()) {
                  CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_);
               }

               if(p_174974_1_ == EnumParticleTypes.TOWN_AURA.func_179348_c()) {
                  CustomColors.updateMyceliumFX(entityfx);
               }

               if(p_174974_1_ == EnumParticleTypes.PORTAL.func_179348_c()) {
                  CustomColors.updatePortalFX(entityfx);
               }

               if(p_174974_1_ == EnumParticleTypes.REDSTONE.func_179348_c()) {
                  CustomColors.updateReddustFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_);
               }

               return entityfx;
            }
         }
      } else {
         return null;
      }
   }

   public void func_72703_a(Entity p_72703_1_) {
      RandomMobs.entityLoaded(p_72703_1_, this.field_72769_h);
      if(Config.isDynamicLights()) {
         DynamicLights.entityAdded(p_72703_1_, this);
      }

   }

   public void func_72709_b(Entity p_72709_1_) {
      if(Config.isDynamicLights()) {
         DynamicLights.entityRemoved(p_72709_1_, this);
      }

   }

   public void func_72728_f() {
   }

   public void func_180440_a(int p_180440_1_, BlockPos p_180440_2_, int p_180440_3_) {
      switch(p_180440_1_) {
      case 1013:
      case 1018:
         if(this.field_72777_q.func_175606_aa() != null) {
            double d0 = (double)p_180440_2_.n() - this.field_72777_q.func_175606_aa().field_70165_t;
            double d1 = (double)p_180440_2_.o() - this.field_72777_q.func_175606_aa().field_70163_u;
            double d2 = (double)p_180440_2_.p() - this.field_72777_q.func_175606_aa().field_70161_v;
            double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
            double d4 = this.field_72777_q.func_175606_aa().field_70165_t;
            double d5 = this.field_72777_q.func_175606_aa().field_70163_u;
            double d6 = this.field_72777_q.func_175606_aa().field_70161_v;
            if(d3 > 0.0D) {
               d4 += d0 / d3 * OBFVAL_29.get();
               d5 += d1 / d3 * OBFVAL_29.get();
               d6 += d2 / d3 * OBFVAL_29.get();
            }

            if(p_180440_1_ == OBFVAL_111.get()) {
               this.field_72769_h.func_72980_b(d4, d5, d6, "mob.wither.spawn", 1.0F, 1.0F, false);
            } else {
               this.field_72769_h.func_72980_b(d4, d5, d6, "mob.enderdragon.end", OBFVAL_95.get(), 1.0F, false);
            }
         }
      default:
      }
   }

   public void func_180439_a(EntityPlayer p_180439_1_, int p_180439_2_, BlockPos p_180439_3_, int p_180439_4_) {
      Random random = this.field_72769_h.s;
      switch(p_180439_2_) {
      case 1000:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.click", 1.0F, 1.0F, false);
         break;
      case 1001:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.click", 1.0F, OBFVAL_112.get(), false);
         break;
      case 1002:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.bow", 1.0F, OBFVAL_112.get(), false);
         break;
      case 1003:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.door_open", 1.0F, this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 1004:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.fizz", OBFVAL_96.get(), OBFVAL_113.get() + (random.nextFloat() - random.nextFloat()) * OBFVAL_85.get(), false);
         break;
      case 1005:
         if(Item.func_150899_d(p_180439_4_) instanceof ItemRecord) {
            this.field_72769_h.a(p_180439_3_, "records." + ((ItemRecord)Item.func_150899_d(p_180439_4_)).field_150929_a);
         } else {
            this.field_72769_h.a(p_180439_3_, (String)null);
         }
         break;
      case 1006:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.door_close", 1.0F, this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 1007:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.charge", OBFVAL_114.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1008:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.fireball", OBFVAL_114.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1009:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.fireball", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1010:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.wood", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1011:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.metal", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1012:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.woodbreak", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1014:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.wither.shoot", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1015:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.bat.takeoff", OBFVAL_115.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1016:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.infect", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1017:
         this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.unfect", OBFVAL_23.get(), (random.nextFloat() - random.nextFloat()) * OBFVAL_73.get() + 1.0F, false);
         break;
      case 1020:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_break", 1.0F, this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 1021:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_use", 1.0F, this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 1022:
         this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_land", OBFVAL_116.get(), this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 2000:
         int i = p_180439_4_ % OBFVAL_11.get() - 1;
         int j = p_180439_4_ / OBFVAL_11.get() % OBFVAL_11.get() - 1;
         double d0 = (double)p_180439_3_.n() + (double)i * OBFVAL_117.get() + OBFVAL_118.get();
         double d1 = (double)p_180439_3_.o() + OBFVAL_118.get();
         double d2 = (double)p_180439_3_.p() + (double)j * OBFVAL_117.get() + OBFVAL_118.get();

         for(int i1 = 0; i1 < OBFVAL_1.get(); ++i1) {
            double d15 = random.nextDouble() * OBFVAL_119.get() + OBFVAL_26.get();
            double d16 = d0 + (double)i * OBFVAL_26.get() + (random.nextDouble() - OBFVAL_118.get()) * (double)j * OBFVAL_118.get();
            double d17 = d1 + (random.nextDouble() - OBFVAL_118.get()) * OBFVAL_118.get();
            double d18 = d2 + (double)j * OBFVAL_26.get() + (random.nextDouble() - OBFVAL_118.get()) * (double)i * OBFVAL_118.get();
            double d19 = (double)i * d15 + random.nextGaussian() * OBFVAL_26.get();
            double d20 = OBFVAL_120.get() + random.nextGaussian() * OBFVAL_26.get();
            double d21 = (double)j * d15 + random.nextGaussian() * OBFVAL_26.get();
            this.func_174972_a(EnumParticleTypes.SMOKE_NORMAL, d16, d17, d18, d19, d20, d21, new int[0]);
         }

         return;
      case 2001:
         Block block = Block.func_149729_e(p_180439_4_ & OBFVAL_121.get());
         if(block.func_149688_o() != Material.field_151579_a) {
            this.field_72777_q.func_147118_V().func_147682_a(new PositionedSoundRecord(new ResourceLocation(block.field_149762_H.func_150495_a()), (block.field_149762_H.func_150497_c() + 1.0F) / OBFVAL_23.get(), block.field_149762_H.func_150494_d() * OBFVAL_85.get(), (float)p_180439_3_.n() + OBFVAL_96.get(), (float)p_180439_3_.o() + OBFVAL_96.get(), (float)p_180439_3_.p() + OBFVAL_96.get()));
         }

         this.field_72777_q.field_71452_i.func_180533_a(p_180439_3_, block.func_176203_a(p_180439_4_ >> OBFVAL_62.get() & OBFVAL_55.get()));
         break;
      case 2002:
         double d3 = (double)p_180439_3_.n();
         double d4 = (double)p_180439_3_.o();
         double d5 = (double)p_180439_3_.p();

         for(int k = 0; k < OBFVAL_5.get(); ++k) {
            EnumParticleTypes enumparticletypes1 = EnumParticleTypes.ITEM_CRACK;
            double d25 = random.nextGaussian() * OBFVAL_122.get();
            double d26 = random.nextDouble() * OBFVAL_119.get();
            double d27 = random.nextGaussian() * OBFVAL_122.get();
            int[] aint = new int[OBFVAL_4.get()];
            aint[0] = Item.func_150891_b(Items.field_151068_bn);
            aint[1] = p_180439_4_;
            this.func_174972_a(enumparticletypes1, d3, d4, d5, d25, d26, d27, aint);
         }

         int j1 = Items.field_151068_bn.func_77620_a(p_180439_4_);
         float f = (float)(j1 >> OBFVAL_31.get() & OBFVAL_55.get()) / OBFVAL_99.get();
         float f1 = (float)(j1 >> OBFVAL_5.get() & OBFVAL_55.get()) / OBFVAL_99.get();
         float f2 = (float)(j1 >> 0 & OBFVAL_55.get()) / OBFVAL_99.get();
         EnumParticleTypes enumparticletypes = EnumParticleTypes.SPELL;
         if(Items.field_151068_bn.func_77833_h(p_180439_4_)) {
            enumparticletypes = EnumParticleTypes.SPELL_INSTANT;
         }

         for(int k1 = 0; k1 < OBFVAL_123.get(); ++k1) {
            double d7 = random.nextDouble() * OBFVAL_98.get();
            double d9 = random.nextDouble() * OBFVAL_28.get() * OBFVAL_29.get();
            double d11 = Math.cos(d9) * d7;
            double d23 = OBFVAL_26.get() + random.nextDouble() * OBFVAL_118.get();
            double d24 = Math.sin(d9) * d7;
            EntityFX entityfx = this.func_174974_b(enumparticletypes.func_179348_c(), enumparticletypes.func_179344_e(), d3 + d11 * OBFVAL_124.get(), d4 + OBFVAL_125.get(), d5 + d24 * OBFVAL_124.get(), d11, d23, d24, new int[0]);
            if(entityfx != null) {
               float f3 = OBFVAL_126.get() + random.nextFloat() * OBFVAL_127.get();
               entityfx.func_70538_b(f * f3, f1 * f3, f2 * f3);
               entityfx.func_70543_e((float)d7);
            }
         }

         this.field_72769_h.func_175731_a(p_180439_3_, "game.potion.smash", 1.0F, this.field_72769_h.s.nextFloat() * OBFVAL_25.get() + OBFVAL_88.get(), false);
         break;
      case 2003:
         double d6 = (double)p_180439_3_.n() + OBFVAL_118.get();
         double d8 = (double)p_180439_3_.o();
         double d10 = (double)p_180439_3_.p() + OBFVAL_118.get();

         for(int l1 = 0; l1 < OBFVAL_5.get(); ++l1) {
            this.func_174972_a(EnumParticleTypes.ITEM_CRACK, d6, d8, d10, random.nextGaussian() * OBFVAL_122.get(), random.nextDouble() * OBFVAL_119.get(), random.nextGaussian() * OBFVAL_122.get(), new int[]{Item.func_150891_b(Items.field_151061_bv)});
         }

         for(double d22 = 0.0D; d22 < OBFVAL_128.get(); d22 += OBFVAL_133.get()) {
            this.func_174972_a(EnumParticleTypes.PORTAL, d6 + Math.cos(d22) * OBFVAL_129.get(), d8 - OBFVAL_130.get(), d10 + Math.sin(d22) * OBFVAL_129.get(), Math.cos(d22) * OBFVAL_131.get(), 0.0D, Math.sin(d22) * OBFVAL_131.get(), new int[0]);
            this.func_174972_a(EnumParticleTypes.PORTAL, d6 + Math.cos(d22) * OBFVAL_129.get(), d8 - OBFVAL_130.get(), d10 + Math.sin(d22) * OBFVAL_129.get(), Math.cos(d22) * OBFVAL_132.get(), 0.0D, Math.sin(d22) * OBFVAL_132.get(), new int[0]);
         }

         return;
      case 2004:
         for(int l = 0; l < OBFVAL_50.get(); ++l) {
            double d12 = (double)p_180439_3_.n() + OBFVAL_118.get() + ((double)this.field_72769_h.s.nextFloat() - OBFVAL_118.get()) * OBFVAL_29.get();
            double d13 = (double)p_180439_3_.o() + OBFVAL_118.get() + ((double)this.field_72769_h.s.nextFloat() - OBFVAL_118.get()) * OBFVAL_29.get();
            double d14 = (double)p_180439_3_.p() + OBFVAL_118.get() + ((double)this.field_72769_h.s.nextFloat() - OBFVAL_118.get()) * OBFVAL_29.get();
            this.field_72769_h.a(EnumParticleTypes.SMOKE_NORMAL, d12, d13, d14, 0.0D, 0.0D, 0.0D, new int[0]);
            this.field_72769_h.a(EnumParticleTypes.FLAME, d12, d13, d14, 0.0D, 0.0D, 0.0D, new int[0]);
         }

         return;
      case 2005:
         ItemDye.func_180617_a(this.field_72769_h, p_180439_3_, p_180439_4_);
      }

   }

   public void func_180441_b(int p_180441_1_, BlockPos p_180441_2_, int p_180441_3_) {
      if(p_180441_3_ >= 0 && p_180441_3_ < OBFVAL_1.get()) {
         DestroyBlockProgress destroyblockprogress = (DestroyBlockProgress)this.field_72738_E.get(Integer.valueOf(p_180441_1_));
         if(destroyblockprogress == null || destroyblockprogress.func_180246_b().n() != p_180441_2_.n() || destroyblockprogress.func_180246_b().o() != p_180441_2_.o() || destroyblockprogress.func_180246_b().p() != p_180441_2_.p()) {
            destroyblockprogress = new DestroyBlockProgress(p_180441_1_, p_180441_2_);
            this.field_72738_E.put(Integer.valueOf(p_180441_1_), destroyblockprogress);
         }

         destroyblockprogress.func_73107_a(p_180441_3_);
         destroyblockprogress.func_82744_b(this.field_72773_u);
      } else {
         this.field_72738_E.remove(Integer.valueOf(p_180441_1_));
      }

   }

   public void func_174979_m() {
      this.field_147595_R = true;
   }

   public void resetClouds() {
      this.cloudRenderer.reset();
   }

   public int getCountRenderers() {
      return this.field_175008_n.field_178164_f.length;
   }

   public int getCountActiveRenderers() {
      return this.field_72755_R.size();
   }

   public int getCountEntitiesRendered() {
      return this.field_72749_I;
   }

   public int getCountTileEntitiesRendered() {
      return this.countTileEntitiesRendered;
   }

   public RenderChunk getRenderChunk(BlockPos p_getRenderChunk_1_) {
      return this.field_175008_n.func_178161_a(p_getRenderChunk_1_);
   }

   public RenderChunk getRenderChunk(RenderChunk p_getRenderChunk_1_, EnumFacing p_getRenderChunk_2_) {
      if(p_getRenderChunk_1_ == null) {
         return null;
      } else {
         BlockPos blockpos = p_getRenderChunk_1_.func_181701_a(p_getRenderChunk_2_);
         return this.field_175008_n.func_178161_a(blockpos);
      }
   }

   public WorldClient getWorld() {
      return this.field_72769_h;
   }

   public void func_181023_a(Collection p_181023_1_, Collection p_181023_2_) {
      Set set = this.field_181024_n;
      synchronized(this.field_181024_n) {
         this.field_181024_n.removeAll(p_181023_1_);
         this.field_181024_n.addAll(p_181023_2_);
      }
   }

   static {
      ObfValue.beginGeneration();
      ObfValue.endGeneration(new byte[]{(byte)-45, (byte)51, (byte)-103, (byte)83, (byte)-121, (byte)-81, (byte)66, (byte)-48});
   }

   public static class ContainerLocalRenderInformation {
      final RenderChunk field_178036_a;
      final EnumFacing field_178034_b;
      final Set field_178035_c;
      final int field_178032_d;
      private static final String __OBFID = "CL_00002534";
      private static final Set EMPTY_FACING = Collections.unmodifiableSet(EnumSet.<T>noneOf(EnumFacing.class));

      public ContainerLocalRenderInformation(RenderChunk p_i14_1_, EnumFacing p_i14_2_, int p_i14_3_) {
         this.field_178035_c = EMPTY_FACING;
         this.field_178036_a = p_i14_1_;
         this.field_178034_b = p_i14_2_;
         this.field_178032_d = p_i14_3_;
      }

      public ContainerLocalRenderInformation(RenderChunk p_i15_1_, EnumFacing p_i15_2_, int p_i15_3_, boolean p_i15_4_) {
         this.field_178035_c = EnumSet.noneOf(EnumFacing.class);
         this.field_178036_a = p_i15_1_;
         this.field_178034_b = p_i15_2_;
         this.field_178032_d = p_i15_3_;
      }

      ContainerLocalRenderInformation(RenderChunk p_i16_1_, EnumFacing p_i16_2_, int p_i16_3_, Object p_i16_4_) {
         this(p_i16_1_, p_i16_2_, p_i16_3_);
      }
   }

   static final class RenderGlobal$RenderGlobal$2 {
      static final int[] field_178037_a = new int[EnumUsage.values().length];
      private static final String __OBFID = "CL_00002535";

      static {
         try {
            field_178037_a[EnumUsage.POSITION.ordinal()] = 1;
         } catch (NoSuchFieldError var3) {
            ;
         }

         try {
            field_178037_a[EnumUsage.UV.ordinal()] = 2;
         } catch (NoSuchFieldError var2) {
            ;
         }

         try {
            field_178037_a[EnumUsage.COLOR.ordinal()] = 3;
         } catch (NoSuchFieldError var1) {
            ;
         }

      }
   }
}
